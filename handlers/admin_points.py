from aiogram import Bot, Router
from aiogram.types import Message
from aiogram.filters import Command
from database.queries import (
    get_user_by_id,
    get_user_by_username,
    update_user_points,
    get_all_users,
    get_user_buns_stats,
    add_or_update_user_bun,
)
from logger import logger
from config import ADMIN
import random

admin_points_r = Router()

# –≠–º–æ–¥–∑–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ –æ—Ç–Ω–∏–º–∞–Ω–∏—è
ADD_EMOJI = "üéâ"
SUB_EMOJI = "üçû"

# –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ —Å –≤–∞—Ä–∏–∞—Ü–∏—è–º–∏
SUCCESS_ALL_POINTS_MESSAGES_ADD = [
    "–•–ª–µ–±–æ–±—É–ª–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞–º–µ—Å–∏–ª–∞ {points} –æ—á–∫–æ–≤ –¥–ª—è –≤—Å–µ—Ö –≤ —á–∞—Ç–µ! –ü–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–æ: {updated} –±—É–ª–æ—á–Ω–∏–∫–æ–≤.",
    "–° –ø—ã–ª—É —Å –∂–∞—Ä—É! {points} –æ—á–∫–æ–≤ —Ä–æ–∑–¥–∞–Ω–æ –≤—Å–µ–º –ø–µ–∫–∞—Ä—è–º —á–∞—Ç–∞, –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {updated} –ø–æ–¥–º–∞—Å—Ç–µ—Ä—å–µ–≤.",
    "–¢–µ—Å—Ç–æ –ø–æ–¥–Ω—è–ª–æ—Å—å! –í—Å–µ–º –±—É–ª–æ—á–Ω–∏–∫–∞–º —á–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–æ {points} –æ—á–∫–æ–≤, –∑–∞–º–µ—à–∞–Ω–æ: {updated} —Ä—É–∫.",
    "–ü–µ–∫–∞—Ä–Ω—è —â–µ–¥—Ä–æ –Ω–∞—Å—ã–ø–∞–ª–∞ {points} –æ—á–∫–æ–≤ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º! –ò—Ç–æ–≥: {updated} —Å–¥–æ–±–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä–æ–≤.",
]

SUCCESS_ALL_POINTS_MESSAGES_SUB = [
    "–•–ª–µ–±–Ω—ã–π –±—É–Ω—Ç! –£ –≤—Å–µ—Ö –±—É–ª–æ—á–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ –æ—Ç–Ω—è—Ç–æ {points} –æ—á–∫–æ–≤, –ø–æ—Å—Ç—Ä–∞–¥–∞–ª–æ: {updated} –ø–µ–∫–∞—Ä–µ–π.",
    "–¢–µ—Å—Ç–æ –æ–ø–∞–ª–æ! {points} –æ—á–∫–æ–≤ —É—Ä–µ–∑–∞–Ω–æ —É –≤—Å–µ—Ö –≤ —á–∞—Ç–µ, –∑–∞–º–µ—à–µ–Ω–æ: {updated} –≥–æ—Ä–µ-–±—É–ª–æ—á–Ω–∏–∫–æ–≤.",
    "–ü–µ–∫–∞—Ä–Ω—è –æ–±—ä—è–≤–∏–ª–∞ –¥–∏–µ—Ç—É: –º–∏–Ω—É—Å {points} –æ—á–∫–æ–≤ –¥–ª—è –≤—Å–µ—Ö, –ø–æ—Ö—É–¥–µ–ª–æ: {updated} –º–∞—Å—Ç–µ—Ä–æ–≤.",
    "–ö—Ä–æ—à–∫–∏ —Å –±–∞—Ä—Å–∫–æ–≥–æ —Å—Ç–æ–ª–∞! –£ –≤—Å–µ—Ö –æ—Ç–Ω—è–ª–∏ {points} –æ—á–∫–æ–≤, –∏—Ç–æ–≥: {updated} –≥–æ–ª–æ–¥–Ω—ã—Ö –ø–µ–∫–∞—Ä–µ–π.",
]

SUCCESS_USER_POINTS_MESSAGES_ADD = [
    "–°–µ–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –≤—Å—ã–ø–∞–ª {points} –æ—á–∫–æ–≤ –±—É–ª–æ—á–Ω–∏–∫—É @{target}! –°–≤–µ–∂–∞—è –≤—ã–ø–µ—á–∫–∞ –≤ –¥–µ–ª–µ.",
    "–¢–µ—Å—Ç–æ –¥–ª—è @{target} –ø–æ–¥–Ω—è–ª–æ—Å—å –Ω–∞ {points} –æ—á–∫–æ–≤! –¢–µ–ø–µ—Ä—å –æ–Ω –Ω–∞—Å—Ç–æ—è—â–∏–π –±—É–ª–æ—á–Ω—ã–π –º–∞–≥–Ω–∞—Ç.",
    "–ü—Ä—è–º–æ –∏–∑ –ø–µ—á–∏! @{target} –ø–æ–ª—É—á–∏–ª {points} –æ—á–∫–æ–≤ –æ—Ç —Ö–ª–µ–±–Ω–æ–π –º–∞–≥–∏–∏.",
    "@{target} –ø–æ–¥–∫–∏–Ω—É–ª–∏ {points} –æ—á–∫–æ–≤ ‚Äî —Ç–µ–ø–µ—Ä—å –æ–Ω –∫–æ—Ä–æ–ª—å –±—É–ª–æ–∫!",
]

SUCCESS_USER_POINTS_MESSAGES_SUB = [
    "–£ @{target} –∫–æ–Ω—Ñ–∏—Å–∫–æ–≤–∞–ª–∏ {points} –æ—á–∫–æ–≤ ‚Äî —Ç–µ—Å—Ç–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ!",
    "–ö—Ä–∞—Ö —Ö–ª–µ–±–Ω–æ–≥–æ –ø–ª–∞–Ω–∞! @{target} –ª–∏—à–∏–ª—Å—è {points} –æ—á–∫–æ–≤.",
    "@{target} —É—Ä–æ–Ω–∏–ª –±—É–ª–∫—É ‚Äî –º–∏–Ω—É—Å {points} –æ—á–∫–æ–≤ –≤ –∫–æ–ø–∏–ª–∫–µ!",
    "–ü–µ–∫–∞—Ä—Å–∫–∏–π —à—Ç—Ä–∞—Ñ! @{target} –ø–æ—Ç–µ—Ä—è–ª {points} –æ—á–∫–æ–≤ –∑–∞ —Å—ã—Ä–æ–µ —Ç–µ—Å—Ç–æ.",
]

NEWBIE_MESSAGE = "@{target} –ø–æ–ª—É—á–∏–ª —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –ö—Ä—É–∞—Å—Å–∞–Ω —Å {points} –æ—á–∫–∞–º–∏!"

NO_ADMIN_RIGHTS_MESSAGES = [
    "–¢–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω—ã–π –ø–µ–∫–∞—Ä—å –º–æ–∂–µ—Ç –º–µ—Å–∏—Ç—å –æ—á–∫–∏, @{username}!",
    "–≠–π, @{username}, —Ä—É–∫–∏ –ø—Ä–æ—á—å –æ—Ç —Ç–µ—Å—Ç–∞ ‚Äî —ç—Ç–æ –¥–µ–ª–æ –º–∞—Å—Ç–µ—Ä–∞ –ø–µ–∫–∞—Ä–Ω–∏!",
    "–ë–µ–∑ —Ö–ª–µ–±–Ω–æ–≥–æ –∂–µ–∑–ª–∞ –Ω–µ –∫–æ–º–∞–Ω–¥—É–π, @{username}!",
    "–¢—ã –Ω–µ –∫–æ—Ä–æ–ª—å –±—É–ª–æ–∫, @{username}, –æ—á–∫–∏ —Ä–∞–∑–¥–∞—ë—Ç —Ç–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω—ã–π –ø–µ–∫–∞—Ä—å!",
]

INVALID_POINTS_MESSAGE = "–£–∫–∞–∂–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–∞! –ü—Ä–∏–º–µ—Ä: /add_points_all <chat_id> 5-10 –∏–ª–∏ /add_points <chat_id> @username -5"
USER_NOT_FOUND_MESSAGE = (
    "–ë—É–ª–æ—á–Ω–∏–∫ @{target} –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –º–∞—Å—Ç–µ—Ä–æ–≤ —Ç–µ—Å—Ç–∞ –≤ —ç—Ç–æ–º —á–∞—Ç–µ!"
)
NO_ACTIVE_USERS_MESSAGE = "–í –ø–µ–∫–∞—Ä–Ω–µ –ø—É—Å—Ç–æ ‚Äî –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—É–ª–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –∑–∞–º–µ—Å–∞ –æ—á–∫–æ–≤!"
NOT_PRIVATE_MESSAGE = "–≠—Ç–∏ –∫–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ –≥–ª–∞–≤–Ω–æ–≥–æ –ø–µ–∫–∞—Ä—è!"


async def apply_points_to_user(
    telegram_id: int, chat_id: int, points: int
) -> tuple[int, bool]:
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –æ—á–∫–∏ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–µ –æ—á–∫–∏ –∏ —Ñ–ª–∞–≥ –Ω–æ–≤–æ–≥–æ –ö—Ä—É–∞—Å—Å–∞–Ω–∞."""
    # –ü–æ–ª—É—á–∞–µ–º user_id –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users
    user = await get_user_by_id(telegram_id, chat_id)
    if not user:
        logger.warning(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å telegram_id={telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —á–∞—Ç–µ {chat_id}"
        )
        return 0, False

    user_id = user.id  # –ü–æ–ª—É—á–∞–µ–º user_id –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    buns = await get_user_buns_stats(telegram_id, chat_id)

    if not buns:  # –ï—Å–ª–∏ –±—É–ª–æ—á–µ–∫ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –ö—Ä—É–∞—Å—Å–∞–Ω —Å –±–∞–∑–æ–≤—ã–º–∏ –æ—á–∫–∞–º–∏
        user_bun = await add_or_update_user_bun(user_id, "–ö—Ä—É–∞—Å—Å–∞–Ω", chat_id)
        if not user_bun:
            logger.error(
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ö—Ä—É–∞—Å—Å–∞–Ω –¥–ª—è user_id={user_id} –≤ —á–∞—Ç–µ {chat_id}"
            )
            return 0, False

        base_points = user_bun.points  # –ë–∞–∑–æ–≤—ã–µ –æ—á–∫–∏ –ö—Ä—É–∞—Å—Å–∞–Ω–∞ (2 –∏–∑ —Ç–∞–±–ª–∏—Ü—ã buns)
        new_total = max(0, points)  # –ò—Ç–æ–≥–æ–≤—ã–µ –æ—á–∫–∏ —Ä–∞–≤–Ω—ã –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã–º
        if new_total != base_points:
            # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –¥–æ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã—Ö –æ—á–∫–æ–≤
            additional_points = new_total - base_points
            total_points = base_points + additional_points
            await update_user_points(
                telegram_id, chat_id, total_points - base_points
            )  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ä–∞–∑–Ω–∏—Ü—É
        logger.info(
            f"–î–æ–±–∞–≤–ª–µ–Ω –ö—Ä—É–∞—Å—Å–∞–Ω —Å –±–∞–∑–æ–≤—ã–º–∏ {base_points} –æ—á–∫–∞–º–∏, –∏—Ç–æ–≥–æ: {new_total}"
        )
        return new_total, True  # True ‚Äî —ç—Ç–æ –Ω–æ–≤—ã–π –ö—Ä—É–∞—Å—Å–∞–Ω
    else:  # –ï—Å–ª–∏ –±—É–ª–æ—á–∫–∏ –µ—Å—Ç—å, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –æ—á–∫–∏
        total_points = sum(bun["points"] for bun in buns)
        await update_user_points(
            telegram_id, chat_id, points
        )  # –ü–µ—Ä–µ–¥–∞—ë–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –æ—á–∫–∏
        new_total = max(0, total_points + points)
        return new_total, False  # False ‚Äî –ö—Ä—É–∞—Å—Å–∞–Ω –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω


@admin_points_r.message(Command("add_points_all"))
async def add_points_all_handler(message: Message, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add_points_all <chat_id> <points> –∏–ª–∏ <min-max>: –∏–∑–º–µ–Ω—è–µ—Ç –æ—á–∫–∏ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —á–∞—Ç–µ."""
    user = message.from_user

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–∏—á–∫—É –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî ADMIN
    if message.chat.type != "private" or user.id != ADMIN:
        await message.reply(
            NOT_PRIVATE_MESSAGE
            if message.chat.type != "private"
            else random.choice(NO_ADMIN_RIGHTS_MESSAGES).format(username=user.username)
        )
        logger.debug(
            f"@{user.username} (ID: {user.id}) –ø–æ–ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /add_points_all –Ω–µ –≤ –ª–∏—á–∫–µ –∏–ª–∏ –±–µ–∑ –ø—Ä–∞–≤"
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã (chat_id –∏ –æ—á–∫–∏ –∏–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω)
    try:
        args = message.text.split(maxsplit=2)
        if len(args) < 3:
            raise IndexError
        chat_id = int(args[1])  # chat_id –∫–∞–∫ –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç
        points_arg = args[2]
        if "-" in points_arg:
            min_points, max_points = map(int, points_arg.split("-"))
            if min_points > max_points:
                raise ValueError(
                    "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ"
                )
        else:
            min_points = max_points = int(points_arg)
    except (IndexError, ValueError):
        await message.reply(INVALID_POINTS_MESSAGE)
        logger.debug(
            f"@{user.username} —É–∫–∞–∑–∞–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ /add_points_all: {message.text}"
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
    all_users = await get_all_users()
    chat_users = [
        user for user in all_users if user["chat_id"] == chat_id and user["in_game"]
    ]

    if not chat_users:
        await message.reply(NO_ACTIVE_USERS_MESSAGE)
        logger.debug(f"–í —á–∞—Ç–µ {chat_id} –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –æ—á–∫–æ–≤")
        return

    # –ù–∞—á–∏—Å–ª—è–µ–º –∏–ª–∏ –æ—Ç–Ω–∏–º–∞–µ–º –æ—á–∫–∏ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    updated_count = 0
    total_points = 0
    for user_data in chat_users:
        points = (
            random.randint(min_points, max_points)
            if min_points != max_points
            else min_points
        )
        new_points, is_new_croissant = await apply_points_to_user(
            user_data["telegram_id"], chat_id, points
        )
        if is_new_croissant:
            # –£–≤–µ–¥–æ–º–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–æ–≤—ã–π –ö—Ä—É–∞—Å—Å–∞–Ω
            await bot.send_message(
                chat_id,
                NEWBIE_MESSAGE.format(target=user_data["username"], points=new_points),
            )
        updated_count += 1
        total_points = (
            points if min_points == max_points else f"{min_points}-{max_points}"
        )
        logger.info(
            f"@{user_data['username']} (ID: {user_data['telegram_id']}) –∏–∑–º–µ–Ω–∏–ª –æ—á–∫–∏ –Ω–∞ {points}, —Ç–µ–ø–µ—Ä—å: {new_points}"
        )

    # –í—ã–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —ç–º–æ–¥–∑–∏
    if min_points > 0:
        message_text = random.choice(SUCCESS_ALL_POINTS_MESSAGES_ADD).format(
            points=total_points, updated=updated_count
        )
        emoji = ADD_EMOJI
    else:
        message_text = random.choice(SUCCESS_ALL_POINTS_MESSAGES_SUB).format(
            points=(
                abs(total_points)
                if isinstance(total_points, int)
                else f"{abs(min_points)}-{abs(max_points)}"
            ),
            updated=updated_count,
        )
        emoji = SUB_EMOJI

    await bot.send_message(chat_id, message_text)
    await bot.send_message(chat_id, emoji)
    await message.reply(f"–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–ª—è —á–∞—Ç–∞ {chat_id}")
    logger.info(
        f"@{user.username} –∏–∑–º–µ–Ω–∏–ª –æ—á–∫–∏ –Ω–∞ {total_points} –¥–ª—è {updated_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç–µ {chat_id}"
    )


@admin_points_r.message(Command("add_points"))
async def add_points_handler(message: Message, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add_points <chat_id> @username <points> –∏–ª–∏ <min-max>: –∏–∑–º–µ–Ω—è–µ—Ç –æ—á–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É."""
    user = message.from_user

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –ª–∏—á–∫—É –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî ADMIN
    if message.chat.type != "private" or user.id != ADMIN:
        await message.reply(
            NOT_PRIVATE_MESSAGE
            if message.chat.type != "private"
            else random.choice(NO_ADMIN_RIGHTS_MESSAGES).format(username=user.username)
        )
        logger.debug(
            f"@{user.username} (ID: {user.id}) –ø–æ–ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /add_points –Ω–µ –≤ –ª–∏—á–∫–µ –∏–ª–∏ –±–µ–∑ –ø—Ä–∞–≤"
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    try:
        args = message.text.split(maxsplit=3)
        if len(args) < 4:
            raise IndexError
        chat_id = int(args[1])  # chat_id –∫–∞–∫ –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç
        target_username = args[2].strip()
        if not target_username.startswith("@"):
            raise ValueError("–Æ–∑–µ—Ä–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å @")
        target_username = target_username[1:]
        points_arg = args[3]
        if "-" in points_arg:
            min_points, max_points = map(int, points_arg.split("-"))
            if min_points > max_points:
                raise ValueError(
                    "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ"
                )
            points = random.randint(min_points, max_points)
        else:
            points = int(points_arg)
    except (IndexError, ValueError):
        await message.reply(INVALID_POINTS_MESSAGE)
        logger.debug(
            f"@{user.username} —É–∫–∞–∑–∞–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ /add_points: {message.text}"
        )
        return

    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    target_data = await get_user_by_username(chat_id, target_username)
    if not target_data or not target_data.in_game:
        await message.reply(USER_NOT_FOUND_MESSAGE.format(target=target_username))
        logger.debug(f"@{target_username} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤ –∏–≥—Ä–µ –≤ —á–∞—Ç–µ {chat_id}")
        return

    # –ü—Ä–∏–º–µ–Ω—è–µ–º –æ—á–∫–∏
    new_points, is_new_croissant = await apply_points_to_user(
        target_data.telegram_id, chat_id, points
    )
    if is_new_croissant:
        # –£–≤–µ–¥–æ–º–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–æ–≤—ã–π –ö—Ä—É–∞—Å—Å–∞–Ω
        await bot.send_message(
            chat_id, NEWBIE_MESSAGE.format(target=target_username, points=new_points)
        )

    # –í—ã–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —ç–º–æ–¥–∑–∏
    if points > 0:
        message_text = random.choice(SUCCESS_USER_POINTS_MESSAGES_ADD).format(
            points=points, target=target_username
        )
        emoji = ADD_EMOJI
    else:
        message_text = random.choice(SUCCESS_USER_POINTS_MESSAGES_SUB).format(
            points=abs(points), target=target_username
        )
        emoji = SUB_EMOJI

    await bot.send_message(chat_id, message_text)
    await bot.send_message(chat_id, emoji)
    await message.reply(f"–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–ª—è @{target_username} –≤ —á–∞—Ç–µ {chat_id}")
    logger.info(
        f"@{user.username} –∏–∑–º–µ–Ω–∏–ª –æ—á–∫–∏ –Ω–∞ {points} –¥–ª—è @{target_username} (ID: {target_data.telegram_id}), —Ç–µ–ø–µ—Ä—å: {new_points}"
    )
