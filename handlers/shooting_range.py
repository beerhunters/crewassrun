# –ù–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞: "–°–æ—Å–∏—Å–æ—á–Ω—ã–π —Ç–∏—Ä" (/shooting_range)
# –ö–æ–Ω—Ü–µ–ø—Ü–∏—è
# –ò–≥—Ä–æ–∫–∏ –º–æ–≥—É—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ "–°–æ—Å–∏—Å–æ—á–Ω–æ–º —Ç–∏—Ä–µ" ‚Äî –º–∏–Ω–∏-–∏–≥—Ä–µ, –≥–¥–µ –æ–Ω–∏ "—Å—Ç—Ä–µ–ª—è—é—Ç" —Å–æ—Å–∏—Å–∫–∞–º–∏ –ø–æ –º–∏—à–µ–Ω—è–º.
# –≠—Ç–æ –æ–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —É–¥–∞—á–∏ –∏ —Ä–∏—Å–∫–∞: —á–µ–º –¥–∞–ª—å—à–µ –º–∏—à–µ–Ω—å, —Ç–µ–º —Å–ª–æ–∂–Ω–µ–µ –ø–æ–ø–∞—Å—Ç—å, –Ω–æ –≤—ã—à–µ –Ω–∞–≥—Ä–∞–¥–∞.
# –£—Å–ø–µ—à–Ω—ã–µ –ø–æ–ø–∞–¥–∞–Ω–∏—è –ø—Ä–∏–Ω–æ—Å—è—Ç –±–∞–ª–ª—ã, –∞ —Ä–µ–¥–∫–æ–µ "–∏–¥–µ–∞–ª—å–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ" –¥–∞–µ—Ç "—Å–æ—Å–∏—Å–∫—É —Å 10 –±–∞–ª–ª–∞–º–∏".
# –î–æ–±–∞–≤–∏–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å "–ø–µ—Ä–µ—Å—Ç—Ä–µ–ª–∫–∏" –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
#
# –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
# –ó–∞–ø—É—Å–∫ —Ç–∏—Ä–∞:
# –ò–≥—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç /shooting_range.
# –¢—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 3 –±–∞–ª–ª–∞ –¥–ª—è —É—á–∞—Å—Ç–∏—è (—Å—Ç–æ–∏–º–æ—Å—Ç—å "–ø–∞—Ç—Ä–æ–Ω–∞").
# –í—ã–±–æ—Ä –º–∏—à–µ–Ω–∏:
# –ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç 3 –º–∏—à–µ–Ω–∏ —Å —Ä–∞–∑–Ω—ã–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ–º –∏ —à–∞–Ω—Å–æ–º –ø–æ–ø–∞–¥–∞–Ω–∏—è:
# –ë–ª–∏–∑–∫–∞—è (70% —É—Å–ø–µ—Ö–∞, +3 –±–∞–ª–ª–∞).
# –°—Ä–µ–¥–Ω—è—è (50% —É—Å–ø–µ—Ö–∞, +5 –±–∞–ª–ª–æ–≤).
# –î–∞–ª—å–Ω—è—è (30% —É—Å–ø–µ—Ö–∞, +8 –±–∞–ª–ª–æ–≤).
# –ò–≥—Ä–æ–∫ –æ—Ç–≤–µ—á–∞–µ—Ç —á–∏—Å–ª–æ–º (1, 2 –∏–ª–∏ 3) –≤ —Ç–µ—á–µ–Ω–∏–µ 15 —Å–µ–∫—É–Ω–¥.
# –°—Ç—Ä–µ–ª—å–±–∞:
# –ë–æ—Ç –∏–º–∏—Ç–∏—Ä—É–µ—Ç –±—Ä–æ—Å–æ–∫ —Å–æ—Å–∏—Å–∫–∏ —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏.
# –®–∞–Ω—Å "–∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è" (5% –¥–ª—è –ª—é–±–æ–π –º–∏—à–µ–Ω–∏): +10 –±–∞–ª–ª–æ–≤ ("—Å–æ—Å–∏—Å–∫–∞").
# –ù–∞–≥—Ä–∞–¥—ã –∏ —à—Ç—Ä–∞—Ñ—ã:
# –ü–æ–ø–∞–¥–∞–Ω–∏–µ: –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∞–µ—Ç –±–∞–ª–ª—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–∏—à–µ–Ω–∏.
# –ü—Ä–æ–º–∞—Ö: —Ç–µ—Ä—è–µ—Ç 3 –±–∞–ª–ª–∞ (—Å—Ç–æ–∏–º–æ—Å—Ç—å "–ø–∞—Ç—Ä–æ–Ω–∞").
# –ò–¥–µ–∞–ª—å–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ: +10 –±–∞–ª–ª–æ–≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ.
# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
# –¢–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö.
# –ö—É–ª–¥–∞—É–Ω 5 –º–∏–Ω—É—Ç (300 —Å–µ–∫—É–Ω–¥) –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ (—á–µ—Ä–µ–∑ Redis).
# –ü–µ—Ä–µ—Å—Ç—Ä–µ–ª–∫–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):
# –ï—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –ø–æ–ø–∞–¥–∞–Ω–∏—è –¥—Ä—É–≥–æ–π –∏–≥—Ä–æ–∫ –ø–∏—à–µ—Ç /shoot, –æ–Ω "–ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç" —á–∞—Å—Ç—å –Ω–∞–≥—Ä–∞–¥—ã (2 –±–∞–ª–ª–∞), –µ—Å–ª–∏ –ø–æ–ø–∞–¥–µ—Ç –≤ —Ç—É –∂–µ –º–∏—à–µ–Ω—å.

# from aiogram import Bot, Router, F
# from aiogram.types import Message
# from aiogram.filters import Command
# from database.queries import (
#     get_user_by_id,
#     get_user_points,
#     update_user_points,
#     reset_user_on_zero_points,
# )
# from logger import logger
# import random
# import asyncio
# import time
# import redis
# import os
#
# shooting_range_r = Router()
#
# # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis
# REDIS_HOST = os.getenv("REDIS_HOST", "localhost")
# REDIS_PORT = int(os.getenv("REDIS_PORT", 6379))
# redis_client = redis.Redis(
#     host=REDIS_HOST, port=REDIS_PORT, db=0, decode_responses=True
# )
#
# # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
# SHOOTING_COST = 3  # –°—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã—Å—Ç—Ä–µ–ª–∞
# SHOOTING_COOLDOWN = 300  # 5 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
# TARGETS = [
#     {"name": "–ë–ª–∏–∑–∫–∞—è", "chance": 70, "reward": 3},
#     {"name": "–°—Ä–µ–¥–Ω—è—è", "chance": 50, "reward": 5},
#     {"name": "–î–∞–ª—å–Ω—è—è", "chance": 30, "reward": 8},
# ]
# CRIT_CHANCE = 5  # –®–∞–Ω—Å –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è (5%)
# CRIT_BONUS = 10  # –ë–æ–Ω—É—Å –∑–∞ –∏–¥–µ–∞–ª—å–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ
#
# # –≠–º–æ–¥–∑–∏
# THROW_EMOJI = "üå≠üí®"  # –ë—Ä–æ—Å–æ–∫
# CRIT_EMOJI = "üå≠‚ú®"  # –ò–¥–µ–∞–ª—å–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ
# HIT_EMOJI = "üéØ"  # –ü–æ–ø–∞–¥–∞–Ω–∏–µ
# MISS_EMOJI = "üí®"  # –ü—Ä–æ–º–∞—Ö
#
# # –°–æ–æ–±—â–µ–Ω–∏—è
# SHOOTING_START_MESSAGES = [
#     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –°–æ—Å–∏—Å–æ—á–Ω—ã–π —Ç–∏—Ä! üéØ –í—ã–±–µ—Ä–∏ –º–∏—à–µ–Ω—å (–æ—Ç–≤–µ—Ç—å —á–∏—Å–ª–æ–º 1-3 –≤ —Ç–µ—á–µ–Ω–∏–µ 15 —Å–µ–∫):\n"
#     "1. –ë–ª–∏–∑–∫–∞—è (70%, +3 –±–∞–ª–ª–∞)\n2. –°—Ä–µ–¥–Ω—è—è (50%, +5 –±–∞–ª–ª–æ–≤)\n3. –î–∞–ª—å–Ω—è—è (30%, +8 –±–∞–ª–ª–æ–≤)",
# ]
#
# SHOOTING_THROW_MESSAGES = [
#     "{throw_emoji} @{player} —Å—Ç—Ä–µ–ª—è–µ—Ç –ø–æ {target} –º–∏—à–µ–Ω–∏... ",
# ]
#
# SHOOTING_HIT_MESSAGES = [
#     "{hit_emoji} –ü–æ–ø–∞–¥–∞–Ω–∏–µ! +{reward} –±–∞–ª–ª–æ–≤! –ü–µ—Ä–µ—Ö–≤–∞—Ç–∏—Ç—å 2 –±–∞–ª–ª–∞: /shoot (10 —Å–µ–∫)!",
#     "{hit_emoji} –¢–æ—á–Ω–æ –≤ —Ü–µ–ª—å! @{player} –ø–æ–ª—É—á–∞–µ—Ç +{reward} –±–∞–ª–ª–æ–≤! /shoot –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ (10 —Å–µ–∫)!",
# ]
#
# SHOOTING_CRIT_MESSAGES = [
#     "{crit_emoji} –ò–î–ï–ê–õ–¨–ù–û–ï –ü–û–ü–ê–î–ê–ù–ò–ï! @{player} –ø–æ–ª—É—á–∞–µ—Ç —Å–æ—Å–∏—Å–∫—É —Å 10 –±–∞–ª–ª–∞–º–∏ + {reward}! –ü–µ—Ä–µ—Ö–≤–∞—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω!",
#     "{crit_emoji} –í —è–±–ª–æ—á–∫–æ! +{reward} –±–∞–ª–ª–æ–≤ –∏ —Å–æ—Å–∏—Å–∫–∞ —Å 10 –±–∞–ª–ª–∞–º–∏ –¥–ª—è @{player}!",
# ]
#
# SHOOTING_MISS_MESSAGES = [
#     "{miss_emoji} –ü—Ä–æ–º–∞—Ö! @{player} —Ç–µ—Ä—è–µ—Ç {cost} –±–∞–ª–ª–∞.",
#     "{miss_emoji} –°–æ—Å–∏—Å–∫–∞ —É–ª–µ—Ç–µ–ª–∞ –º–∏–º–æ! -{cost} –±–∞–ª–ª–∞ –¥–ª—è @{player}.",
# ]
#
# SHOOTING_INTERCEPT_MESSAGES = [
#     "{hit_emoji} @{interceptor} –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏–ª! –ó–∞–±–∏—Ä–∞–µ—Ç 2 –±–∞–ª–ª–∞ —É @{player}!",
#     "{hit_emoji} –¢–æ—á–Ω—ã–π –≤—ã—Å—Ç—Ä–µ–ª @{interceptor}! 2 –±–∞–ª–ª–∞ –ø–µ—Ä–µ—Ö–æ–¥—è—Ç –æ—Ç @{player}!",
# ]
#
# SHOOTING_INTERCEPT_MISS_MESSAGES = [
#     "{miss_emoji} @{interceptor} –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è –ø—Ä–∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç–µ! –ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç.",
# ]
#
# SHOOTING_COOLDOWN_MESSAGES = [
#     "@{player}, —Ç–∏—Ä –µ—â–µ –ø–µ—Ä–µ–∑–∞—Ä—è–∂–∞–µ—Ç—Å—è! –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ. ‚è≥",
#     "–°–æ—Å–∏—Å–∫–∏ –≤ —Ç–∏—Ä–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, @{player}! –í–µ—Ä–Ω–∏—Å—å –ø–æ–∑–∂–µ. ‚è≥",
# ]
#
# # –°–ª–æ–≤–∞—Ä—å –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∏—Ä–æ–≤ (chat_id: {player_id: {"target": int, "timestamp": float}})
# active_ranges = {}
#
#
# @shooting_range_r.message(Command("shooting_range"))
# async def shooting_range_handler(message: Message, bot: Bot):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /shooting_range: –∑–∞–ø—É—Å–∫ —Å–æ—Å–∏—Å–æ—á–Ω–æ–≥–æ —Ç–∏—Ä–∞."""
#     if message.chat.type == "private":
#         await message.reply("–¢–∏—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö! üå≠")
#         return
#
#     chat_id = message.chat.id
#     player = message.from_user
#
#     player_data = await get_user_by_id(player.id, chat_id)
#     if not player_data or not player_data.in_game:
#         await message.reply("–¢—ã –Ω–µ –≤ –∏–≥—Ä–µ! –°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç—É–ø–∏ –≤ –∏–≥—Ä—É.")
#         return
#
#     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞
#     cooldown_key = f"shooting:cooldown:{chat_id}:{player.id}"
#     last_shot_time = redis_client.get(cooldown_key)
#     if last_shot_time and (time.time() - float(last_shot_time) < SHOOTING_COOLDOWN):
#         await message.reply(
#             random.choice(SHOOTING_COOLDOWN_MESSAGES).format(player=player.username)
#         )
#         return
#
#     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–ª–æ–≤
#     player_points = await get_user_points(player.id, chat_id)
#     if player_points < SHOOTING_COST:
#         await message.reply(f"–î–ª—è –≤—ã—Å—Ç—Ä–µ–ª–∞ –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º {SHOOTING_COST} –±–∞–ª–ª–∞!")
#         return
#
#     # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–∏—Ä
#     if chat_id not in active_ranges:
#         active_ranges[chat_id] = {}
#     active_ranges[chat_id][player.id] = {"target": None, "timestamp": time.time()}
#
#     # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –º–∏—à–µ–Ω—å
#     await message.reply(random.choice(SHOOTING_START_MESSAGES))
#
#     # –ñ–¥–µ–º –≤—ã–±–æ—Ä–∞ 15 —Å–µ–∫—É–Ω–¥
#     await asyncio.sleep(15)
#     if (
#         chat_id in active_ranges
#         and player.id in active_ranges[chat_id]
#         and active_ranges[chat_id][player.id]["target"] is None
#     ):
#         await bot.send_message(
#             chat_id, f"@{player.username} –Ω–µ –≤—ã–±—Ä–∞–ª –º–∏—à–µ–Ω—å! –¢–∏—Ä –∑–∞–∫—Ä—ã—Ç."
#         )
#         del active_ranges[chat_id][player.id]
#         if not active_ranges[chat_id]:
#             del active_ranges[chat_id]
#
#
# @shooting_range_r.message(F.text(text=["1", "2", "3"]))
# async def shooting_target_handler(message: Message, bot: Bot):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –º–∏—à–µ–Ω–∏."""
#     chat_id = message.chat.id
#     player = message.from_user
#
#     if chat_id not in active_ranges or player.id not in active_ranges[chat_id]:
#         return
#
#     target_idx = int(message.text) - 1
#     if target_idx not in range(len(TARGETS)):
#         return
#
#     target = TARGETS[target_idx]
#     active_ranges[chat_id][player.id]["target"] = target_idx
#
#     # –°–Ω–∏–º–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã—Å—Ç—Ä–µ–ª–∞
#     await update_user_points(player.id, chat_id, -SHOOTING_COST)
#
#     # –°—Ç—Ä–µ–ª—å–±–∞
#     await bot.send_message(
#         chat_id,
#         random.choice(SHOOTING_THROW_MESSAGES).format(
#             throw_emoji=THROW_EMOJI,
#             player=player.username,
#             target=target["name"].lower(),
#         ),
#     )
#     await asyncio.sleep(1)
#
#     # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
#     hit = random.randint(1, 100) <= target["chance"]
#     crit = random.randint(1, 100) <= CRIT_CHANCE if hit else False
#     reward = target["reward"] + CRIT_BONUS if crit else target["reward"] if hit else 0
#
#     if crit:
#         message_text = random.choice(SHOOTING_CRIT_MESSAGES).format(
#             crit_emoji=CRIT_EMOJI, player=player.username, reward=target["reward"]
#         )
#         await update_user_points(player.id, chat_id, reward)
#         await bot.send_message(chat_id, message_text)
#     elif hit:
#         message_text = random.choice(SHOOTING_HIT_MESSAGES).format(
#             hit_emoji=HIT_EMOJI, player=player.username, reward=reward
#         )
#         await update_user_points(player.id, chat_id, reward)
#         await bot.send_message(chat_id, message_text)
#
#         # –ñ–¥–µ–º –ø–µ—Ä–µ—Ö–≤–∞—Ç
#         await asyncio.sleep(10)
#         if chat_id in active_ranges and player.id in active_ranges[chat_id]:
#             del active_ranges[chat_id][player.id]
#             if not active_ranges[chat_id]:
#                 del active_ranges[chat_id]
#     else:
#         message_text = random.choice(SHOOTING_MISS_MESSAGES).format(
#             miss_emoji=MISS_EMOJI, player=player.username, cost=SHOOTING_COST
#         )
#         await bot.send_message(chat_id, message_text)
#         del active_ranges[chat_id][player.id]
#         if not active_ranges[chat_id]:
#             del active_ranges[chat_id]
#
#     # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É–ª–¥–∞—É–Ω
#     redis_client.setex(
#         f"shooting:cooldown:{chat_id}:{player.id}", SHOOTING_COOLDOWN, time.time()
#     )
#
#     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω—É–ª–µ–Ω–∏—è
#     new_points = await get_user_points(player.id, chat_id)
#     if new_points <= 0:
#         await reset_user_on_zero_points(player.id, chat_id)
#         await bot.send_message(
#             chat_id, f"@{player.username} –æ–±–Ω—É–ª–∏–ª—Å—è –ø–æ—Å–ª–µ —Ç–∏—Ä–∞! {MISS_EMOJI}"
#         )
#
#
# @shooting_range_r.message(Command("shoot"))
# async def shooting_intercept_handler(message: Message, bot: Bot):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞."""
#     chat_id = message.chat.id
#     interceptor = message.from_user
#
#     if chat_id not in active_ranges or not any(
#         active_ranges[chat_id][pid]["target"] is not None
#         for pid in active_ranges[chat_id]
#     ):
#         await message.reply("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–∏—à–µ–Ω–µ–π –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞! üéØ")
#         return
#
#     # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å—Ç—Ä–µ–ª—è–≤—à–µ–≥–æ
#     shooter_id = max(
#         active_ranges[chat_id], key=lambda pid: active_ranges[chat_id][pid]["timestamp"]
#     )
#     shooter_data = await get_user_by_id(shooter_id, chat_id)
#     target_idx = active_ranges[chat_id][shooter_id]["target"]
#     target = TARGETS[target_idx]
#
#     # –°—Ç—Ä–µ–ª—å–±–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞
#     await bot.send_message(
#         chat_id,
#         random.choice(SHOOTING_THROW_MESSAGES).format(
#             throw_emoji=THROW_EMOJI,
#             player=interceptor.username,
#             target=target["name"].lower(),
#         ),
#     )
#     await asyncio.sleep(1)
#
#     hit = random.randint(1, 100) <= target["chance"]
#     if hit:
#         message_text = random.choice(SHOOTING_INTERCEPT_MESSAGES).format(
#             hit_emoji=HIT_EMOJI,
#             interceptor=interceptor.username,
#             player=shooter_data.username,
#         )
#         await update_user_points(interceptor.id, chat_id, 2)
#         await update_user_points(shooter_id, chat_id, -2)
#         await bot.send_message(chat_id, message_text)
#     else:
#         message_text = random.choice(SHOOTING_INTERCEPT_MISS_MESSAGES).format(
#             miss_emoji=MISS_EMOJI, interceptor=interceptor.username
#         )
#         await bot.send_message(chat_id, message_text)
#
#     # –£–¥–∞–ª—è–µ–º —Ç–∏—Ä –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞
#     del active_ranges[chat_id][shooter_id]
#     if not active_ranges[chat_id]:
#         del active_ranges[chat_id]
