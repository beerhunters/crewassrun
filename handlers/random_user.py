# handlers/random_user.py
import asyncio
import random
from aiogram import Bot
from database.queries import get_random_user, add_or_update_user_bun, get_all_buns
from logger import logger


MESSAGES = [
    "@{user}, —Å–µ–≥–æ–¥–Ω—è —Ç—ã —Ç–∞ —Å–∞–º–∞—è –±—É–ª–æ—á–∫–∞, –∫–æ—Ç–æ—Ä—É—é –≤—Å–µ —Ö–æ—Ç—è—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å! {bun} –¥–Ω—è! ü•ê‚ú®",
    "@{user}, —Ç—ã —Å–≤–µ–∂, –∫–∞–∫ —É—Ç—Ä–µ–Ω–Ω–∏–π {bun}, –∞ —Ç–≤–æ—è —Ö–∞—Ä–∏–∑–º–∞ —Å–ª–∞—â–µ —Å–∞–º–æ–π –≤–∫—É—Å–Ω–æ–π –≥–ª–∞–∑—É—Ä–∏! üçØ",
    "@{user}, —Å–µ–≥–æ–¥–Ω—è –º–∏—Ä –Ω–µ–º–Ω–æ–≥–æ –≤–∫—É—Å–Ω–µ–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã ‚Äî {bun}! üòã",
    "@{user}, —Ç–µ–±—è —Ö–æ—á–µ—Ç—Å—è —É–Ω–µ—Å—Ç–∏ –¥–æ–º–æ–π –∏ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è —Ü–µ–ª—ã–π –¥–µ–Ω—å, –≤–µ–¥—å —Ç—ã ‚Äî {bun}! üç∞",
    "@{user}, —Ö—Ä—É—Å—Ç–∏—à—å, —Å–∏—è–µ—à—å –∏ —Ä–∞–¥—É–µ—à—å –≤—Å–µ—Ö –≤–æ–∫—Ä—É–≥, –∫–∞–∫ –∏–¥–µ–∞–ª—å–Ω—ã–π {bun}! ü•êüíõ",
    "@{user}, –µ—Å–ª–∏ –±—ã –¥–µ–Ω—å –±—ã–ª –¥–µ—Å–µ—Ä—Ç–æ–º, —Ç–æ —Ç—ã –±—ã–ª –±—ã –µ–≥–æ —Å–∞–º–æ–π —Å–ª–∞–¥–∫–æ–π —á–∞—Å—Ç—å—é ‚Äî {bun}! üç´",
    "@{user}, —Ç—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ {bun}, —Ç—ã ‚Äì –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞! üé®üç©",
    "@{user}, –æ–±–Ω—è—Ç—å —Ç–µ–±—è ‚Äì –≤—Å—ë —Ä–∞–≤–Ω–æ —á—Ç–æ —Å—ä–µ—Å—Ç—å —Ç–µ–ø–ª—ã–π {bun} —Å —á–∞—à–µ—á–∫–æ–π –∫–æ—Ñ–µ! ‚òïüíï",
    "@{user}, —Ç—ã ‚Äì –∫–∞–∫ –∏–¥–µ–∞–ª—å–Ω—ã–π {bun}: –º—è–≥–∫–∏–π –≤–Ω—É—Ç—Ä–∏, –Ω–æ —Å —Ö—Ä—É—Å—Ç—è—â–µ–π –∫–æ—Ä–æ—á–∫–æ–π! üî•",
    "@{user}, –±—ã—Ç—å {bun} ‚Äì –∑–Ω–∞—á–∏—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —Ä–∞–¥–æ—Å—Ç—å, –∞ —Ç—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å! üéâ",
]

SHURSHU_MESSAGES = [
    "–®—É—Ä—à—É-–º—É—Ä—à—É... –ù–∞ —á—å–µ–π —Å—Ç–æ—Ä–æ–Ω–µ —É–¥–∞—á–∞ –±—É–¥–µ—Ç —Å–µ–≥–æ–¥–Ω—è? ü§î‚ú®",
    "–í–Ω–∏–º–∞–Ω–∏–µ! –°—É–¥—å–±–∞ —É–∂–µ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–±—è –∫ –≤–µ–ª–∏–∫–æ–º—É —Å–æ–±—ã—Ç–∏—é! –ö—Ç–æ –±—É–¥–µ—Ç –±—É–ª–æ—á–∫–æ–π –¥–Ω—è? üßê",
    "–ú—É—Ä—á—É –∏ —à—É—Ä—à—É... –í—Ä–µ–º—è —É–∑–Ω–∞—Ç—å, –∫—Ç–æ —Å–µ–≥–æ–¥–Ω—è –∑–∞–∂–∂–µ—Ç! üî•üí•",
    "–°–µ–∫—É–Ω–¥—É... –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –º–∞–≥–∏—è —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è! –ö—Ç–æ –∂–µ —Å—Ç–∞–Ω–µ—Ç –±—É–ª–æ—á–∫–æ–π –¥–Ω—è? üßô‚Äç‚ôÇÔ∏è‚ú®",
    "–ì–æ—Ç–æ–≤—ã? –®—É—Ä—à—É... –ö—Ç–æ —Å–µ–≥–æ–¥–Ω—è –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —Å–ª–∞–¥–∫—É—é –ª–æ–≤—É—à–∫—É? üç©üéØ",
    "–¢–∞–π–Ω–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∞! –ù–æ –∫—Ç–æ –∂–µ —Å—Ç–∞–Ω–µ—Ç –±—É–ª–æ—á–∫–æ–π –¥–Ω—è? üòè",
    "–ú—É—Ä-–º—É—Ä... –°—É–¥—å–±–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ? üêæüçû",
    "–ò—Ç–∞–∫, —à—É—Ä—à—É! –ö—Ç–æ —Å–µ–≥–æ–¥–Ω—è –æ–∫–∞–∂–µ—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä–µ —Å–ª–∞–¥–∫–æ–π —Å–ª–∞–≤—ã? üç∞",
    "–í—Å–µ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏... –ö—Ç–æ –±—É–¥–µ—Ç —Ç–æ–π —Å–∞–º–æ–π –±—É–ª–æ—á–∫–æ–π –¥–Ω—è? üç©üí´",
    "–ú—É—Ä—á—É... –í—Ä–µ–º—è –∑–∞–≥–∞–¥–æ–∫ –∏ —Å–ª–∞–¥–∫–∏—Ö —Å—é—Ä–ø—Ä–∏–∑–æ–≤! –¢—ã –≥–æ—Ç–æ–≤ –∫ —á—É–¥—É? ‚ú®üç™",
]


async def send_random_message(bot: Bot, chat_id: int):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º —Å–ª—É—á–∞–π–Ω–æ–π –±—É–ª–æ—á–∫–∏."""
    user = await get_random_user(chat_id=chat_id)
    if not user:
        await bot.send_message(chat_id, "–í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤! üòî")
        logger.warning(f"–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç–µ {chat_id}")
        return

    display_name = f"@{user.username}" if user.username else user.full_name

    buns_points = await get_all_buns()
    if not buns_points:
        await bot.send_message(chat_id, "–ë—É–ª–æ—á–∫–∏ –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–∞–∑—É! üò±")
        logger.error(f"–¢–∞–±–ª–∏—Ü–∞ buns –ø—É—Å—Ç–∞ –¥–ª—è —á–∞—Ç–∞ {chat_id}")
        return

    pre_message = random.choice(SHURSHU_MESSAGES)
    await bot.send_message(
        chat_id, pre_message.format(user=display_name), parse_mode="HTML"
    )
    await asyncio.sleep(1)

    bun_names = list(buns_points.keys())
    text = "–ö—Ä—É—Ç–∏–º –±–∞—Ä–∞–±–∞–Ω –±—É–ª–æ—á–µ–∫... üé°"
    msg = await bot.send_message(chat_id, text, parse_mode="HTML")

    animation_buns = random.sample(bun_names, min(5, len(bun_names)))
    for random_bun in animation_buns:
        await msg.edit_text(f"–ö—Ä—É—Ç–∏–º –±–∞—Ä–∞–±–∞–Ω –±—É–ª–æ—á–µ–∫... üé°\n–¢–µ–∫—É—â–∞—è: {random_bun}")
        await asyncio.sleep(0.8)

    effects = ["ü•Å –®—É—Ä-—à—É—Ä...", "ü•Å –ë—É–º-–±—É–º...", "ü•Å –¢–∞–¥–∞–º!"]
    for effect in effects:
        await msg.edit_text(effect)
        await asyncio.sleep(1)

    bun, points_per_bun = random.choice(list(buns_points.items()))
    final_message = random.choice(MESSAGES).format(user=display_name, bun=bun)
    await msg.edit_text(
        f"{final_message}\n\n–û—á–∫–æ–≤ –∑–∞ –±—É–ª–æ—á–∫—É: <b>{points_per_bun}</b> üç∞",
        parse_mode="HTML",
    )

    try:
        await add_or_update_user_bun(user_id=user.id, bun=bun, chat_id=chat_id)
        logger.info(f"–ë—É–ª–æ—á–∫–∞ {bun} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è {display_name} –≤ —á–∞—Ç–µ {chat_id}")
    except Exception as e:
        logger.error(
            f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –±—É–ª–æ—á–∫–∏ –¥–ª—è {user.id} –≤ —á–∞—Ç–µ {chat_id}: {e}"
        )
        await bot.send_message(
            chat_id, "–û–π! –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –±—É–ª–æ—á–∫—É, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ! üòì"
        )
