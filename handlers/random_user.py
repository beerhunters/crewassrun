# # # import asyncio
# # # import random
# # # from aiogram import Bot
# # # from buns_data import (
# # #     BUNS,
# # #     MESSAGES,
# # #     SHURSHU_MESSAGES,
# # #     BUNS_POINTS,
# # # )
# # # from database.queries import get_random_user, add_or_update_user_bun
# # #
# # #
# # # async def send_random_message(bot: Bot, chat_id: int):
# # #     user = await get_random_user(chat_id=chat_id)
# # #     if not user:
# # #         return
# # #     pre_message = random.choice(SHURSHU_MESSAGES)
# # #     await bot.send_message(chat_id, pre_message, parse_mode="HTML")
# # #     await asyncio.sleep(2)
# # #     text = "–ü—É-–ø—É-–ø—É"
# # #     msg = await bot.send_message(chat_id, text, parse_mode="HTML")
# # #     emojis = ["‚è≥", "‚åõ", "‚è≥", "‚åõ", "‚è≥", "‚åõ", "‚è≥", "‚åõ"]
# # #     for emoji in emojis:
# # #         await msg.edit_text(f"–ü—É-–ø—É-–ø—É... {emoji}")
# # #         await asyncio.sleep(1)
# # #     bun = random.choice(BUNS)
# # #     message = random.choice(MESSAGES).format(
# # #         user=f"@{user.username}" if user.username else user.full_name, bun=bun
# # #     )
# # #     await bot.send_message(chat_id, message, parse_mode="HTML")
# # #     points_per_bun = BUNS_POINTS.get(bun, 0)
# # #     await add_or_update_user_bun(
# # #         user_id=user.id,
# # #         bun=bun,
# # #         chat_id=chat_id,
# # #     )
# # import asyncio
# # import random
# # from aiogram import Bot
# # from buns_data import SHURSHU_MESSAGES, MESSAGES, BUNS_POINTS
# # from database.queries import get_random_user, add_or_update_user_bun
# #
# #
# # async def send_random_message(bot: Bot, chat_id: int):
# #     user = await get_random_user(chat_id=chat_id)
# #     if not user:
# #         return
# #     pre_message = random.choice(SHURSHU_MESSAGES)
# #     await bot.send_message(chat_id, pre_message, parse_mode="HTML")
# #     await asyncio.sleep(2)
# #     text = "–ü—É-–ø—É-–ø—É"
# #     msg = await bot.send_message(chat_id, text, parse_mode="HTML")
# #     emojis = ["‚è≥", "‚åõ", "‚è≥", "‚åõ", "‚è≥", "‚åõ", "‚è≥", "‚åõ"]
# #     for emoji in emojis:
# #         await msg.edit_text(f"–ü—É-–ø—É-–ø—É... {emoji}")
# #         await asyncio.sleep(1)
# #
# #     # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –±—É–ª–æ—á–∫—É –∏ –µ—ë –æ—á–∫–∏ –ø—Ä—è–º–æ –∏–∑ BUNS_POINTS
# #     bun, points_per_bun = random.choice(list(BUNS_POINTS.items()))
# #
# #     message = random.choice(MESSAGES).format(
# #         user=f"{user.username}" if user.username else user.full_name, bun=bun
# #     )
# #     await bot.send_message(chat_id, message, parse_mode="HTML")
# #
# #     await add_or_update_user_bun(
# #         user_id=user.id,
# #         bun=bun,
# #         chat_id=chat_id,
# #     )
# # handlers/random_user.py
# import asyncio
# import random
# from aiogram import Bot
# from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
# from buns_data import SHURSHU_MESSAGES, MESSAGES, BUNS_POINTS
# from database.queries import get_random_user, add_or_update_user_bun
# from logger import logger
#
#
# async def send_random_message(bot: Bot, chat_id: int):
#     """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º —Å–ª—É—á–∞–π–Ω–æ–π –±—É–ª–æ—á–∫–∏."""
#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
#     user = await get_random_user(chat_id=chat_id)
#     if not user:
#         await bot.send_message(chat_id, "–í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤! üòî")
#         logger.warning(f"–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç–µ {chat_id}")
#         return
#
#     display_name = f"{user.username}" if user.username else user.full_name
#
#     # 1. –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
#     pre_message = random.choice(SHURSHU_MESSAGES)
#     await bot.send_message(
#         chat_id, pre_message.format(user=display_name), parse_mode="HTML"
#     )
#     await asyncio.sleep(1)
#
#     # 2. –ê–Ω–∏–º–∞—Ü–∏—è "—Ä—É–ª–µ—Ç–∫–∏" –±—É–ª–æ—á–µ–∫
#     bun_names = list(BUNS_POINTS.keys())
#     text = "–ö—Ä—É—Ç–∏–º –±–∞—Ä–∞–±–∞–Ω –±—É–ª–æ—á–µ–∫... üé°"
#     msg = await bot.send_message(chat_id, text, parse_mode="HTML")
#
#     for _ in range(5):  # 5 –∏—Ç–µ—Ä–∞—Ü–∏–π –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞
#         random_bun = random.choice(bun_names)
#         await msg.edit_text(f"–ö—Ä—É—Ç–∏–º –±–∞—Ä–∞–±–∞–Ω –±—É–ª–æ—á–µ–∫... üé°\n–¢–µ–∫—É—â–∞—è: {random_bun}")
#         await asyncio.sleep(0.8)  # –£—Å–∫–æ—Ä—è–µ–º –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏
#
#     # 3. –§–∏–Ω–∞–ª—å–Ω—ã–π "–±–∞—Ä–∞–±–∞–Ω–Ω—ã–π –±–æ–π"
#     effects = ["ü•Å –®—É—Ä-—à—É—Ä...", "ü•Å –ë—É–º-–±—É–º...", "ü•Å –¢–∞–¥–∞–º!"]
#     for effect in effects:
#         await msg.edit_text(effect)
#         await asyncio.sleep(1)
#
#     # 4. –†–∞—Å–∫—Ä—ã—Ç–∏–µ –±—É–ª–æ—á–∫–∏
#     bun, points_per_bun = random.choice(list(BUNS_POINTS.items()))
#     final_message = random.choice(MESSAGES).format(user=display_name, bun=bun)
#     await msg.edit_text(
#         f"{final_message}\n\n–û—á–∫–æ–≤ –∑–∞ –±—É–ª–æ—á–∫—É: <b>{points_per_bun}</b> üç∞",
#         parse_mode="HTML",
#     )
#
#     # 5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –±–∞–∑–µ
#     try:
#         await add_or_update_user_bun(
#             user_id=user.id,
#             bun=bun,
#             chat_id=chat_id,
#         )
#         logger.info(f"–ë—É–ª–æ—á–∫–∞ {bun} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è {display_name} –≤ —á–∞—Ç–µ {chat_id}")
#     except Exception as e:
#         logger.error(
#             f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –±—É–ª–æ—á–∫–∏ –¥–ª—è {user.id} –≤ —á–∞—Ç–µ {chat_id}: {e}"
#         )
# handlers/random_user.py
import asyncio
import random
from aiogram import Bot
from buns_data import SHURSHU_MESSAGES, MESSAGES, BUNS_POINTS
from database.queries import get_random_user, add_or_update_user_bun
from logger import logger


async def send_random_message(bot: Bot, chat_id: int):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º —Å–ª—É—á–∞–π–Ω–æ–π –±—É–ª–æ—á–∫–∏."""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    user = await get_random_user(chat_id=chat_id)
    if not user:
        await bot.send_message(chat_id, "–í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤! üòî")
        logger.warning(f"–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç–µ {chat_id}")
        return

    display_name = f"{user.username}" if user.username else user.full_name

    # 1. –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    pre_message = random.choice(SHURSHU_MESSAGES)
    await bot.send_message(
        chat_id, pre_message.format(user=display_name), parse_mode="HTML"
    )
    await asyncio.sleep(1)

    # 2. –ê–Ω–∏–º–∞—Ü–∏—è "—Ä—É–ª–µ—Ç–∫–∏" –±—É–ª–æ—á–µ–∫
    bun_names = list(BUNS_POINTS.keys())
    text = "–ö—Ä—É—Ç–∏–º –±–∞—Ä–∞–±–∞–Ω –±—É–ª–æ—á–µ–∫... üé°"
    msg = await bot.send_message(chat_id, text, parse_mode="HTML")

    # –í—ã–±–∏—Ä–∞–µ–º 5 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –±—É–ª–æ—á–µ–∫ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    animation_buns = random.sample(
        bun_names, min(5, len(bun_names))
    )  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    for random_bun in animation_buns:
        await msg.edit_text(f"–ö—Ä—É—Ç–∏–º –±–∞—Ä–∞–±–∞–Ω –±—É–ª–æ—á–µ–∫... üé°\n–¢–µ–∫—É—â–∞—è: {random_bun}")
        await asyncio.sleep(0.8)  # –£—Å–∫–æ—Ä—è–µ–º –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏

    # 3. –§–∏–Ω–∞–ª—å–Ω—ã–π "–±–∞—Ä–∞–±–∞–Ω–Ω—ã–π –±–æ–π"
    effects = ["ü•Å –®—É—Ä-—à—É—Ä...", "ü•Å –ë—É–º-–±—É–º...", "ü•Å –¢–∞–¥–∞–º!"]
    for effect in effects:
        await msg.edit_text(effect)
        await asyncio.sleep(1)

    # 4. –†–∞—Å–∫—Ä—ã—Ç–∏–µ –±—É–ª–æ—á–∫–∏
    bun, points_per_bun = random.choice(list(BUNS_POINTS.items()))
    final_message = random.choice(MESSAGES).format(user=display_name, bun=bun)
    await msg.edit_text(
        f"{final_message}\n\n–û—á–∫–æ–≤ –∑–∞ –±—É–ª–æ—á–∫—É: <b>{points_per_bun}</b> üç∞",
        parse_mode="HTML",
    )

    # 5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –±–∞–∑–µ
    try:
        await add_or_update_user_bun(
            user_id=user.id,
            bun=bun,
            chat_id=chat_id,
        )
        logger.info(f"–ë—É–ª–æ—á–∫–∞ {bun} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è {display_name} –≤ —á–∞—Ç–µ {chat_id}")
    except Exception as e:
        logger.error(
            f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –±—É–ª–æ—á–∫–∏ –¥–ª—è {user.id} –≤ —á–∞—Ç–µ {chat_id}: {e}"
        )
