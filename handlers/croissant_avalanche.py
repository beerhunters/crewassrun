# –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞: "–ö—Ä—É–∞—Å—Å–∞–Ω–æ–≤–∞—è –ª–∞–≤–∏–Ω–∞" (/avalanche)
# –ö–æ–Ω—Ü–µ–ø—Ü–∏—è
# –ò–≥—Ä–æ–∫–∏ –∑–∞–ø—É—Å–∫–∞—é—Ç "–ö—Ä—É–∞—Å—Å–∞–Ω–æ–≤—É—é –ª–∞–≤–∏–Ω—É" ‚Äî –∫–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –∏–≥—Ä—É, –≥–¥–µ –ø–µ—Ä–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ "—Ç–æ–ª–∫–∞–µ—Ç" –∫—Ä—É–∞—Å—Å–∞–Ω —Å –≥–æ—Ä—ã (–≤–Ω–æ—Å–∏—Ç –±–∞–ª–ª—ã),
# –∞ –¥—Ä—É–≥–∏–µ –º–æ–≥—É—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è, —É—Å–∏–ª–∏–≤–∞—è "–ª–∞–≤–∏–Ω—É". –ß–µ–º –±–æ–ª—å—à–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, —Ç–µ–º –±–æ–ª—å—à–µ –∫—Ä—É–∞—Å—Å–∞–Ω–æ–≤ "—Å–∫–∞—Ç—ã–≤–∞–µ—Ç—Å—è" –≤–Ω–∏–∑,
# —É–≤–µ–ª–∏—á–∏–≤–∞—è –æ–±—â—É—é –Ω–∞–≥—Ä–∞–¥—É. –ï—Å—Ç—å —à–∞–Ω—Å –Ω–∞ "–∑–æ–ª–æ—Ç—É—é –ª–∞–≤–∏–Ω—É" —Å –±–æ–Ω—É—Å–æ–º –≤ 10 –±–∞–ª–ª–æ–≤.
# –≠—Ç–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –¥—É—ç–ª–∏ (PvP) –∏ —Ç–∏—Ä–∞ (–æ–¥–∏–Ω–æ—á–Ω—ã–π —à–∞–Ω—Å) —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥–Ω–æ–π –¥–∏–Ω–∞–º–∏–∫–æ–π –∏ "–Ω–∞—Ä–∞—Å—Ç–∞—é—â–∏–º" —ç—Ñ—Ñ–µ–∫—Ç–æ–º.
#
# –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
# –ó–∞–ø—É—Å–∫ –ª–∞–≤–∏–Ω—ã:
# –ò–≥—Ä–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç /avalanche start.
# –¢—Ä–µ–±—É–µ—Ç—Å—è 5 –±–∞–ª–ª–æ–≤ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞.
# –õ–∞–≤–∏–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞ 60 —Å–µ–∫—É–Ω–¥.
# –£—á–∞—Å—Ç–∏–µ:
# –î—Ä—É–≥–∏–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—Ç—Å—è —á–µ—Ä–µ–∑ /avalanche join, –≤–Ω–æ—Å—è 3 –±–∞–ª–ª–∞.
# –ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –¥–æ–±–∞–≤–ª—è–µ—Ç "–∫—Ä—É–∞—Å—Å–∞–Ω" –≤ –ª–∞–≤–∏–Ω—É, —É–≤–µ–ª–∏—á–∏–≤–∞—è –æ–±—â–∏–π –ø—É–ª.
# –†–µ–∑—É–ª—å—Ç–∞—Ç:
# –ß–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥ –ª–∞–≤–∏–Ω–∞ "–æ–±—Ä—É—à–∏–≤–∞–µ—Ç—Å—è":
# –ë–∞–∑–æ–≤–∞—è –Ω–∞–≥—Ä–∞–¥–∞: –∫–∞–∂–¥—ã–π –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–æ–∏ –±–∞–ª–ª—ã –æ–±—Ä–∞—Ç–Ω–æ + 1 –±–∞–ª–ª –∑–∞ –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞.
# –ó–æ–ª–æ—Ç–∞—è –ª–∞–≤–∏–Ω–∞ (—à–∞–Ω—Å 5% + 5% –∑–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–≤–µ—Ä—Ö –ø–µ—Ä–≤–æ–≥–æ, –¥–æ 20%): +10 –±–∞–ª–ª–æ–≤ –∫–∞–∂–¥–æ–º—É.
# –ü—É–ª –±–∞–ª–ª–æ–≤ –¥–µ–ª–∏—Ç—Å—è –ø–æ—Ä–æ–≤–Ω—É –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ (–æ—Å—Ç–∞—Ç–æ–∫ "—Ç–µ—Ä—è–µ—Ç—Å—è –≤ —Å–Ω–µ–≥—É").
# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
# –¢–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö.
# –ö—É–ª–¥–∞—É–Ω 15 –º–∏–Ω—É—Ç (900 —Å–µ–∫—É–Ω–¥) –¥–ª—è —á–∞—Ç–∞ (—á–µ—Ä–µ–∑ Redis).
# –ú–∞–∫—Å–∏–º—É–º 5 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
# –í–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã:
# –≠–º–æ–¥–∑–∏ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞, —É—Å–∏–ª–µ–Ω–∏—è –∏ —Ñ–∏–Ω–∞–ª–∞: —Å–Ω–µ–≥, –∫—Ä—É–∞—Å—Å–∞–Ω—ã, –∑–æ–ª–æ—Ç–æ.

# from aiogram import Bot, Router
# from aiogram.types import Message
# from aiogram.filters import Command
# from database.queries import (
#     get_user_by_id,
#     get_user_points,
#     update_user_points,
#     reset_user_on_zero_points,
# )
# from logger import logger
# import random
# import asyncio
# import time
# import redis
# import os
#
# croissant_avalanche_r = Router()
#
# # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis
# REDIS_HOST = os.getenv("REDIS_HOST", "localhost")
# REDIS_PORT = int(os.getenv("REDIS_PORT", 6379))
# redis_client = redis.Redis(
#     host=REDIS_HOST, port=REDIS_PORT, db=0, decode_responses=True
# )
#
# # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
# AVALANCHE_START_COST = 5  # –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞
# AVALANCHE_JOIN_COST = 3  # –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
# AVALANCHE_COOLDOWN = 900  # 15 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
# AVALANCHE_DURATION = 60  # 60 —Å–µ–∫—É–Ω–¥ –Ω–∞ —Å–±–æ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
# MAX_PARTICIPANTS = 5  # –ú–∞–∫—Å–∏–º—É–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
# BASE_GOLD_CHANCE = 5  # –ë–∞–∑–æ–≤—ã–π —à–∞–Ω—Å –∑–æ–ª–æ—Ç–æ–π –ª–∞–≤–∏–Ω—ã
# GOLD_CHANCE_PER_PLAYER = 5  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —à–∞–Ω—Å –∑–∞ –∏–≥—Ä–æ–∫–∞
# GOLD_BONUS = 10  # –ë–æ–Ω—É—Å –∑–∞ –∑–æ–ª–æ—Ç—É—é –ª–∞–≤–∏–Ω—É
#
# # –≠–º–æ–¥–∑–∏
# SNOW_EMOJI = "‚ùÑÔ∏è"  # –°—Ç–∞—Ä—Ç –ª–∞–≤–∏–Ω—ã
# MOUNTAIN_EMOJI = "üèîÔ∏è"  # –£—Å–∏–ª–µ–Ω–∏–µ –ª–∞–≤–∏–Ω—ã
# CROISSANT_EMOJI = "ü•ê"  # –û–±—ã—á–Ω—ã–π –∫—Ä—É–∞—Å—Å–∞–Ω
# GOLD_CROISSANT_EMOJI = "ü•ê‚ú®"  # –ó–æ–ª–æ—Ç–∞—è –ª–∞–≤–∏–Ω–∞
#
# # –°–æ–æ–±—â–µ–Ω–∏—è
# AVALANCHE_START_MESSAGES = [
#     "{snow_emoji} @{player} —Ç–æ–ª–∫–Ω—É–ª –ö—Ä—É–∞—Å—Å–∞–Ω–æ–≤—É—é –ª–∞–≤–∏–Ω—É! –í–Ω–µ—Å {cost} –±–∞–ª–ª–æ–≤. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å (/avalanche join) –≤ —Ç–µ—á–µ–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥! {croissant_emoji}",
# ]
#
# AVALANCHE_JOIN_MESSAGES = [
#     "{mountain_emoji} @{player} —É—Å–∏–ª–∏–ª –ª–∞–≤–∏–Ω—É! –í–Ω–µ—Å {cost} –±–∞–ª–ª–∞. –ö—Ä—É–∞—Å—Å–∞–Ω–æ–≤: {count}.",
# ]
#
# AVALANCHE_RESULT_MESSAGES = [
#     "{croissant_emoji} –õ–∞–≤–∏–Ω–∞ –æ–±—Ä—É—à–∏–ª–∞—Å—å! –ù–∞–≥—Ä–∞–¥—ã: {rewards}",
#     "{croissant_emoji} –ö—Ä—É–∞—Å—Å–∞–Ω—ã —Å–∫–∞—Ç–∏–ª–∏—Å—å –≤–Ω–∏–∑! –£—á–∞—Å—Ç–Ω–∏–∫–∏ –ø–æ–ª—É—á–∞—é—Ç: {rewards}",
# ]
#
# AVALANCHE_GOLD_RESULT_MESSAGES = [
#     "{gold_croissant_emoji} –ó–û–õ–û–¢–ê–Ø –õ–ê–í–ò–ù–ê! –£—á–∞—Å—Ç–Ω–∏–∫–∏ –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ: {rewards}",
#     "{gold_croissant_emoji} –ó–æ–ª–æ—Ç–æ–π –æ–±–≤–∞–ª! –ù–∞–≥—Ä–∞–¥—ã: {rewards}",
# ]
#
# AVALANCHE_COOLDOWN_MESSAGES = [
#     "–õ–∞–≤–∏–Ω–∞ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–∞, @{player}! –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ. ‚è≥",
#     "@{player}, –∫—Ä—É–∞—Å—Å–∞–Ω—ã –∑–∞—Å—Ç—ã–ª–∏ –≤ —Å–Ω–µ–≥—É! –í–µ—Ä–Ω–∏—Å—å –ø–æ–∑–∂–µ. ‚è≥",
# ]
#
# AVALANCHE_FULL_MESSAGES = [
#     "–õ–∞–≤–∏–Ω–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è! –ë–æ–ª—å—à–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ –¥–æ–±–∞–≤–∏—Ç—å. {croissant_emoji}",
# ]
#
# # –°–ª–æ–≤–∞—Ä—å –∞–∫—Ç–∏–≤–Ω—ã—Ö –ª–∞–≤–∏–Ω (chat_id: {starter_id: {"participants": {user_id: cost}, "timestamp": float}})
# active_avalanches = {}
#
#
# @croissant_avalanche_r.message(
#     Command(commands=["avalanche"], prefixes=["/"], suffix="start")
# )
# async def avalanche_start_handler(message: Message, bot: Bot):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /avalanche start: –∑–∞–ø—É—Å–∫ –ª–∞–≤–∏–Ω—ã."""
#     if message.chat.type == "private":
#         await message.reply("–õ–∞–≤–∏–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö! ü•ê")
#         return
#
#     chat_id = message.chat.id
#     player = message.from_user
#
#     player_data = await get_user_by_id(player.id, chat_id)
#     if not player_data or not player_data.in_game:
#         await message.reply("–¢—ã –Ω–µ –≤ –∏–≥—Ä–µ! –°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç—É–ø–∏ –≤ –∏–≥—Ä—É.")
#         return
#
#     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞
#     cooldown_key = f"avalanche:cooldown:{chat_id}"
#     last_avalanche_time = redis_client.get(cooldown_key)
#     if last_avalanche_time and (
#         time.time() - float(last_avalanche_time) < AVALANCHE_COOLDOWN
#     ):
#         await message.reply(
#             random.choice(AVALANCHE_COOLDOWN_MESSAGES).format(player=player.username)
#         )
#         return
#
#     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–ª–æ–≤
#     player_points = await get_user_points(player.id, chat_id)
#     if player_points < AVALANCHE_START_COST:
#         await message.reply(
#             f"–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ª–∞–≤–∏–Ω—ã –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º {AVALANCHE_START_COST} –±–∞–ª–ª–æ–≤!"
#         )
#         return
#
#     # –ó–∞–ø—É—Å–∫–∞–µ–º –ª–∞–≤–∏–Ω—É
#     if chat_id not in active_avalanches:
#         active_avalanches[chat_id] = {}
#     active_avalanches[chat_id][player.id] = {
#         "participants": {player.id: AVALANCHE_START_COST},
#         "timestamp": time.time(),
#     }
#
#     await update_user_points(player.id, chat_id, -AVALANCHE_START_COST)
#     await message.reply(
#         random.choice(AVALANCHE_START_MESSAGES).format(
#             snow_emoji=SNOW_EMOJI,
#             player=player.username,
#             cost=AVALANCHE_START_COST,
#             croissant_emoji=CROISSANT_EMOJI,
#         )
#     )
#
#     # –ñ–¥–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ 60 —Å–µ–∫—É–Ω–¥
#     await asyncio.sleep(AVALANCHE_DURATION)
#     if chat_id in active_avalanches and player.id in active_avalanches[chat_id]:
#         await process_avalanche_result(bot, chat_id, player.id)
#
#
# @croissant_avalanche_r.message(
#     Command(commands=["avalanche"], prefixes=["/"], suffix="join")
# )
# async def avalanche_join_handler(message: Message, bot: Bot):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /avalanche join: –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –ª–∞–≤–∏–Ω–µ."""
#     chat_id = message.chat.id
#     player = message.from_user
#
#     if chat_id not in active_avalanches or not active_avalanches[chat_id]:
#         await message.reply(
#             "–í —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–∞–≤–∏–Ω—ã! –ó–∞–ø—É—Å—Ç–∏ –µ–µ –∫–æ–º–∞–Ω–¥–æ–π /avalanche start ü•ê"
#         )
#         return
#
#     player_data = await get_user_by_id(player.id, chat_id)
#     if not player_data or not player_data.in_game:
#         await message.reply("–¢—ã –Ω–µ –≤ –∏–≥—Ä–µ! –°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç—É–ø–∏ –≤ –∏–≥—Ä—É.")
#         return
#
#     # –ù–∞—Ö–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω—É—é –ª–∞–≤–∏–Ω—É
#     starter_id = next(iter(active_avalanches[chat_id]))
#     avalanche = active_avalanches[chat_id][starter_id]
#
#     if player.id in avalanche["participants"]:
#         await message.reply("–¢—ã —É–∂–µ –≤ –ª–∞–≤–∏–Ω–µ! –ñ–¥–∏ –æ–±–≤–∞–ª–∞. ü•ê")
#         return
#
#     if len(avalanche["participants"]) >= MAX_PARTICIPANTS:
#         await message.reply(
#             random.choice(AVALANCHE_FULL_MESSAGES).format(
#                 croissant_emoji=CROISSANT_EMOJI
#             )
#         )
#         return
#
#     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–ª–æ–≤
#     player_points = await get_user_points(player.id, chat_id)
#     if player_points < AVALANCHE_JOIN_COST:
#         await message.reply(f"–î–ª—è —É—á–∞—Å—Ç–∏—è –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º {AVALANCHE_JOIN_COST} –±–∞–ª–ª–∞!")
#         return
#
#     # –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞
#     await update_user_points(player.id, chat_id, -AVALANCHE_JOIN_COST)
#     avalanche["participants"][player.id] = AVALANCHE_JOIN_COST
#     await message.reply(
#         random.choice(AVALANCHE_JOIN_MESSAGES).format(
#             mountain_emoji=MOUNTAIN_EMOJI,
#             player=player.username,
#             cost=AVALANCHE_JOIN_COST,
#             count=len(avalanche["participants"]),
#         )
#     )
#
#
# async def process_avalanche_result(bot: Bot, chat_id: int, starter_id: int):
#     """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ª–∞–≤–∏–Ω—ã."""
#     if chat_id not in active_avalanches or starter_id not in active_avalanches[chat_id]:
#         return
#
#     avalanche = active_avalanches[chat_id][starter_id]
#     participants = avalanche["participants"]
#     participant_count = len(participants)
#
#     # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —à–∞–Ω—Å –∑–æ–ª–æ—Ç–æ–π –ª–∞–≤–∏–Ω—ã
#     gold_chance = min(
#         BASE_GOLD_CHANCE + GOLD_CHANCE_PER_PLAYER * (participant_count - 1), 20
#     )
#     is_gold = random.randint(1, 100) <= gold_chance
#
#     # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–∞–≥—Ä–∞–¥—ã
#     total_pool = sum(participants.values())  # –í—Å–µ –≤–Ω–µ—Å–µ–Ω–Ω—ã–µ –±–∞–ª–ª—ã
#     base_reward = total_pool + participant_count  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ 1 –±–∞–ª–ª—É –∑–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞
#     gold_bonus = GOLD_BONUS if is_gold else 0
#     reward_per_player = (base_reward + gold_bonus) // participant_count
#
#     rewards = []
#     for pid, cost in participants.items():
#         user_data = await get_user_by_id(pid, chat_id)
#         total_reward = cost + reward_per_player
#         await update_user_points(pid, chat_id, total_reward)
#         rewards.append(f"@{user_data.username}: +{total_reward} –±–∞–ª–ª–æ–≤")
#
#     # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
#     if is_gold:
#         message_text = random.choice(AVALANCHE_GOLD_RESULT_MESSAGES).format(
#             gold_croissant_emoji=GOLD_CROISSANT_EMOJI, rewards=", ".join(rewards)
#         )
#     else:
#         message_text = random.choice(AVALANCHE_RESULT_MESSAGES).format(
#             croissant_emoji=CROISSANT_EMOJI, rewards=", ".join(rewards)
#         )
#     await bot.send_message(chat_id, message_text)
#
#     # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É–ª–¥–∞—É–Ω
#     redis_client.setex(f"avalanche:cooldown:{chat_id}", AVALANCHE_COOLDOWN, time.time())
#
#     # –£–¥–∞–ª—è–µ–º –ª–∞–≤–∏–Ω—É
#     del active_avalanches[chat_id][starter_id]
#     if not active_avalanches[chat_id]:
#         del active_avalanches[chat_id]
#
#     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω—É–ª–µ–Ω–∏—è (–º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
#     for pid in participants:
#         points = await get_user_points(pid, chat_id)
#         if points <= 0:
#             await reset_user_on_zero_points(pid, chat_id)
#             user_data = await get_user_by_id(pid, chat_id)
#             await bot.send_message(
#                 chat_id, f"@{user_data.username} –æ–±–Ω—É–ª–∏–ª—Å—è –ø–æ—Å–ª–µ –ª–∞–≤–∏–Ω—ã!"
#             )
