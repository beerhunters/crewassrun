# # from aiogram import Bot, Router
# # from aiogram.types import Message
# # from aiogram.filters import Command
# # from database.queries import (
# #     get_user_by_id,
# #     get_user_points,
# #     update_user_points,
# #     get_user_by_username,
# #     get_user_buns_stats,
# #     get_random_user,
# #     get_game_setting,
# #     reset_user_on_zero_points,
# # )
# # from logger import logger
# # import random
# # import asyncio
# #
# # sausage_game_r = Router()
# #
# # # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
# # HOTDOG_EMOJI = "üå≠"  # –ë–æ–Ω—É—Å –∑–∞ —Å–æ—Å–∏—Å–∫—É
# # HIT_EMOJI = "üí•"  # –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ
# # PENALTY_EMOJI = "üò¢"  # –®—Ç—Ä–∞—Ñ –∑–∞ –∞—Ç–∞–∫—É –±–µ–∑–æ—Ä—É–∂–Ω–æ–≥–æ
# #
# # # –°—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫ –±—Ä–æ—Å–∫–∞ –±–µ–∑ –æ—á–∫–æ–≤: {chat_id: {user_id: int}}
# # attempts_counter = {}
# #
# # # –Æ–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—Ä–∞–∑—ã
# # NO_POINTS_MESSAGES = [
# #     "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å–æ—Å–∏—Å–æ—á–Ω—ã—Ö –±–∞–ª–ª–æ–≤ ({points}/{cost})! –ò–¥–∏ –∏—Å–ø–µ–∫–∏ –±—É–ª–æ—á–∫—É!",
# #     "–°–æ—Å–∏—Å–∫–∏ –Ω–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ, @{username}! –£ —Ç–µ–±—è —Ç–æ–ª—å–∫–æ {points}/{cost} –±–∞–ª–ª–æ–≤.",
# #     "–¢–≤–æ–∏ –∫–∞—Ä–º–∞–Ω—ã –ø—É—Å—Ç—ã, @{username}! {points}/{cost} ‚Äî —ç—Ç–æ –Ω–µ —Å–æ—Å–∏—Å–æ—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å.",
# #     "–ë–µ–∑ –±–∞–ª–ª–æ–≤ —Å–æ—Å–∏—Å–∫—É –Ω–µ –∫–∏–Ω–µ—à—å, @{username}! ({points}/{cost})",
# # ]
# #
# # NO_POINTS_RANDOM_MESSAGES = [
# #     "@{username} –ø–æ–ø—ã—Ç–∞–ª—Å—è —à–≤—ã—Ä–Ω—É—Ç—å —Å–ª—É—á–∞–π–Ω—É—é —Å–æ—Å–∏—Å–∫—É, –Ω–æ –±–∞–ª–ª–æ–≤ –Ω–µ—Ç ({points}/{cost})!",
# #     "–°–æ—Å–∏—Å–∫–∞ –æ—Å—Ç–∞–ª–∞—Å—å –≤ –∫–∞—Ä–º–∞–Ω–µ —É @{username} ‚Äî –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–ª–ª–æ–≤ ({points}/{cost})!",
# #     "@{username} —Ö–æ—Ç–µ–ª –∫–∏–Ω—É—Ç—å —Å–æ—Å–∏—Å–∫—É –Ω–∞—É–≥–∞–¥, –Ω–æ –ø—É—Å—Ç—ã–µ –∫–∞—Ä–º–∞–Ω—ã —Å–∫–∞–∑–∞–ª–∏ '–Ω–µ—Ç' ({points}/{cost})!",
# #     "–†–∞–Ω–¥–æ–º–Ω–∞—è —Å–æ—Å–∏—Å–∫–∞? –ù–µ —Å–µ–≥–æ–¥–Ω—è, @{username}! –ë–∞–ª–ª–æ–≤ –º–∞–ª–æ ({points}/{cost}).",
# # ]
# #
# # NO_POINTS_THIRD_ATTEMPT_MESSAGE = (
# #     "–≠–π, @{username}, —Ö–≤–∞—Ç–∏—Ç –ø—ã—Ç–∞—Ç—å—Å—è! –£ —Ç–µ–±—è {points} –±–∞–ª–ª–æ–≤, –∞ –Ω—É–∂–Ω–æ {cost}, —á—Ç–æ–±—ã –∫–∏–Ω—É—Ç—å —Å–æ—Å–∏—Å–∫—É. "
# #     "–ü–æ–∫–∞ –Ω–µ –Ω–∞–±–µ—Ä–µ—à—å –±–∞–ª–ª—ã, –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–π–¥–µ—Ç! –ò–¥–∏ –∑–∞ –±—É–ª–æ—á–∫–∞–º–∏! üå≠"
# # )
# #
# # THROW_MESSAGES = [
# #     "üå≠üí® @{attacker} —à–≤—ã—Ä—è–µ—Ç —Å–æ—Å–∏—Å–∫—É –≤ @{target}! –õ–µ—Ç–∏—Ç...",
# #     "üå≠üí® @{attacker} –º–µ—Ç–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ @{target}! –°–º–æ—Ç—Ä–∏–º...",
# #     "üå≠üí® –°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} —É—Å—Ç—Ä–µ–º–∏–ª–∞—Å—å –∫ @{target}! –ß—Ç–æ –±—É–¥–µ—Ç?",
# #     "üå≠üí® @{attacker} –∑–∞—Ä—è–¥–∏–ª —Å–æ—Å–∏—Å–∫—É –≤ —Å—Ç–æ—Ä–æ–Ω—É @{target}! –ñ–¥–µ–º...",
# #     "üå≠üí® @{attacker} –±—Ä–æ—Å–∏–ª —Å–æ—Å–∏—Å–∫—É –≤ @{target}! –í –ø–æ–ª–µ—Ç–µ...",
# # ]
# #
# # HIT_MESSAGES = [
# #     "@{attacker} –º–µ—Ç–∫–æ –ø–æ–ø–∞–ª —Å–æ—Å–∏—Å–∫–æ–π –≤ @{target}! –£ @{target} –±—ã–ª–æ {old_points}, —Å—Ç–∞–ª–æ {new_points}.",
# #     "@{attacker} –∑–∞—Ä—è–¥–∏–ª —Å–æ—Å–∏—Å–∫–æ–π –ø—Ä—è–º–æ –≤ @{target}! –¢–µ–ø–µ—Ä—å —É –∂–µ—Ä—Ç–≤—ã {new_points} –≤–º–µ—Å—Ç–æ {old_points}.",
# #     "–ë–∞–º! @{attacker} —É–≥–æ–¥–∏–ª —Å–æ—Å–∏—Å–∫–æ–π –≤ @{target}! –ë–∞–ª–ª—ã —É–ø–∞–ª–∏ —Å {old_points} –¥–æ {new_points}.",
# #     "@{attacker} —É—Å—Ç—Ä–æ–∏–ª —Å–æ—Å–∏—Å–æ—á–Ω—ã–π —Å—é—Ä–ø—Ä–∏–∑ –¥–ª—è @{target}! –û—Å—Ç–∞–ª–æ—Å—å {new_points} –±–∞–ª–ª–æ–≤ –≤–º–µ—Å—Ç–æ {old_points}.",
# #     "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} –ø—Ä–∏–ª–µ—Ç–µ–ª–∞ –≤ @{target}! –ë–∞–ª–ª—ã —Ç–∞—é—Ç: {old_points} ‚Üí {new_points}.",
# # ]
# #
# # PENALTY_MESSAGES = [
# #     "@{attacker} –∫–∏–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ @{target}, –Ω–æ —Ç–æ—Ç –±—ã–ª –±–µ–∑–æ—Ä—É–∂–µ–Ω! –†–∞—Å–ø–ª–∞—Ç–∞: –º–∏–Ω—É—Å {penalty} –±–∞–ª–ª–æ–≤, –æ—Å—Ç–∞–ª–æ—Å—å {new_points}.",
# #     "@{attacker} –∑—Ä—è —à–≤—ã—Ä–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ –ø—É—Å—Ç—ã–µ –∫–∞—Ä–º–∞–Ω—ã @{target}! –®—Ç—Ä–∞—Ñ {penalty}, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è {new_points} –±–∞–ª–ª–æ–≤.",
# #     "–û–π-–æ–π, @{attacker}! @{target} –æ–∫–∞–∑–∞–ª—Å—è –±–µ–∑ –±–∞–ª–ª–æ–≤, –∏ —Å–æ—Å–∏—Å–∫–∞ –≤–µ—Ä–Ω—É–ª–∞—Å—å –±—É–º–µ—Ä–∞–Ω–≥–æ–º: -{penalty}, –æ—Å—Ç–∞–ª–æ—Å—å {new_points}.",
# #     "@{attacker} –ø–æ–ø–∞–ª —Å–æ—Å–∏—Å–∫–æ–π –≤ @{target}, –Ω–æ –±–µ–∑ —Ç–æ–ª–∫—É! –®—Ç—Ä–∞—Ñ –∑–∞ –ø–æ–¥–ª–æ—Å—Ç—å: -{penalty}, –∏—Ç–æ–≥–æ {new_points}.",
# #     "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} —É–≥–æ–¥–∏–ª–∞ –≤ @{target}, –Ω–æ –±–µ–∑ —Ç–æ–ª–∫—É! @{attacker} —Ç–µ—Ä—è–µ—Ç {penalty}, —Ç–µ–ø–µ—Ä—å {new_points} –±–∞–ª–ª–æ–≤.",
# # ]
# #
# # NOT_IN_CHAT_MESSAGES = [
# #     "–°–æ—Å–∏—Å–∫–∞ —É–ª–µ—Ç–µ–ª–∞ –≤ –ø—É—Å—Ç–æ—Ç—É, @{target} –¥–∞–≤–Ω–æ —Å–±–µ–∂–∞–ª!",
# #     "@{target} –≥–¥–µ-—Ç–æ —Å–ø—Ä—è—Ç–∞–ª—Å—è, –∏ —Ç–≤–æ—è —Å–æ—Å–∏—Å–∫–∞ –ø—Ä–æ–ø–∞–ª–∞ –∑—Ä—è, @{attacker}!",
# #     "–ö—É–¥–∞ –∫–∏–Ω—É–ª, @{attacker}? @{target} —É–∂–µ –Ω–µ –≤ —á–∞—Ç–µ, —Å–æ—Å–∏—Å–∫–∞ –ø–æ—Ç–µ—Ä—è–ª–∞—Å—å!",
# #     "@{attacker} —à–≤—ã—Ä–Ω—É–ª —Å–æ—Å–∏—Å–∫—É, –Ω–æ @{target} –∏—Å–ø–∞—Ä–∏–ª—Å—è –∏–∑ —á–∞—Ç–∞!",
# #     "–°–æ—Å–∏—Å–∫–∞ –Ω–µ –¥–æ–ª–µ—Ç–µ–ª–∞ ‚Äî @{target} —Å–±–µ–∂–∞–ª –æ—Ç –±—É–ª–æ—á–Ω–æ–π –±–∏—Ç–≤—ã!",
# # ]
# #
# # SAUSAGE_BONUS_MESSAGES = [
# #     "@{attacker} –∫–∏–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ @{target}, –Ω–æ —É —Ç–æ–≥–æ —É–∂–µ –±—ã–ª–∞ —Å–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ! –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ: +{bonus} –±–∞–ª–ª–æ–≤, —Ç–µ–ø–µ—Ä—å {new_points}!",
# #     "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} –ø–æ–ø–∞–ª–∞ –≤ @{target}, –∏ —Ç–æ—Ç –æ–±—Ä–∞–¥–æ–≤–∞–ª—Å—è ‚Äî –æ–Ω —Å–æ—Å–∏—Å–æ—á–Ω—ã–π –º–∞—Å—Ç–µ—Ä! +{bonus}, –∏—Ç–æ–≥–æ {new_points}.",
# #     "@{target} –ø–æ–π–º–∞–ª —Å–æ—Å–∏—Å–∫—É –æ—Ç @{attacker} –∏ –≤—Å–ø–æ–º–Ω–∏–ª —Å–≤–æ–∏ —Å–æ—Å–∏—Å–æ—á–Ω—ã–µ –∫–æ—Ä–Ω–∏! –ë–æ–Ω—É—Å: +{bonus}, —Å—Ç–∞–ª–æ {new_points}.",
# #     "@{attacker}, —Ç–≤–æ—è —Å–æ—Å–∏—Å–∫–∞ —Å–¥–µ–ª–∞–ª–∞ @{target} —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ! –û–Ω –ø–æ–ª—É—á–∞–µ—Ç +{bonus} –±–∞–ª–ª–æ–≤, —Ç–µ–ø–µ—Ä—å {new_points}.",
# #     "–ë—É–º! @{attacker} –ø–æ–ø–∞–ª –≤ @{target}, –Ω–æ —Å–æ—Å–∏—Å–∫–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å –Ω–∞ –µ–≥–æ —Å—Ç–æ—Ä–æ–Ω–µ! +{bonus}, –∏—Ç–æ–≥–æ {new_points}.",
# # ]
# #
# # RANDOM_Sausage_MESSAGES = [
# #     "@{attacker} —à–≤—ã—Ä–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –Ω–∞—É–≥–∞–¥ –∏ —Ü–µ–ª–∏—Ç—Å—è –≤ @{target}!",
# #     "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} —É–ª–µ—Ç–µ–ª–∞ –≤ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–µ–≥–æ ‚Äî @{target}!",
# #     "@{attacker} —Ä–µ—à–∏–ª —Å—ã–≥—Ä–∞—Ç—å –≤ —Å–æ—Å–∏—Å–æ—á–Ω—É—é —Ä—É–ª–µ—Ç–∫—É ‚Äî @{target} –ø–æ–¥ –ø—Ä–∏—Ü–µ–ª–æ–º!",
# #     "–°–ª—É—á–∞–π–Ω—ã–π –±—Ä–æ—Å–æ–∫ –æ—Ç @{attacker}, –∏ @{target} —Å—Ç–∞–ª –º–∏—à–µ–Ω—å—é!",
# #     "@{attacker} –∫–∏–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ —Ç–æ–ª–ø—É, –∞ –ø–æ–ø–∞–ª –≤ @{target}!",
# # ]
# #
# # MISS_MESSAGES = [
# #     "@{attacker} –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è! –°–æ—Å–∏—Å–∫–∞ —É–ª–µ—Ç–µ–ª–∞ –≤ –∑–∞–∫–∞—Ç.",
# #     "–û–π! @{attacker} –Ω–µ –ø–æ–ø–∞–ª –≤ @{target}, –æ–Ω–∞ –ø—Ä–æ–ª–µ—Ç–µ–ª–∞ –º–∏–º–æ!",
# #     "@{attacker} –º–µ—Ç–∏–ª –≤ @{target}, –Ω–æ —Å–æ—Å–∏—Å–∫–∞ —Ä–µ—à–∏–ª–∞ —É–π—Ç–∏ –≤ —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ–ª—ë—Ç!",
# #     "–ü—Ä–æ–º–∞—Ö! @{attacker} –Ω–µ —É–≥–æ–¥–∏–ª –≤ @{target}, —Å–æ—Å–∏—Å–∫–∞ –ø—Ä–æ–ø–∞–ª–∞ –∑—Ä—è.",
# #     "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} –Ω–µ –¥–æ–ª–µ—Ç–µ–ª–∞ –¥–æ @{target} ‚Äî —Ç–æ—á–Ω–æ—Å—Ç—å –ø–æ–¥–∫–∞—á–∞–ª–∞!",
# # ]
# #
# # SELF_HIT_MESSAGES = [
# #     "–°–æ—Å–∏—Å–∫–∞ —á—É—Ç—å –Ω–µ –ø–æ–ø–∞–ª–∞ –≤ —Ç–µ–±—è —Å–∞–º–æ–≥–æ, @{username}, –Ω–æ —Ç—ã —É–≤–µ—Ä–Ω—É–ª—Å—è!",
# #     "@{username} —à–≤—ã—Ä–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –∏ —á—É—Ç—å –Ω–µ —Å—Ç–∞–ª –∂–µ—Ä—Ç–≤–æ–π —Å–∞–º ‚Äî –ª–æ–≤–∫–æ—Å—Ç—å —Å–ø–∞—Å–ª–∞!",
# #     "–û–π-–æ–π, @{username}! –°–æ—Å–∏—Å–∫–∞ —Å–¥–µ–ª–∞–ª–∞ –∫—Ä—É–≥ –∏ —á—É—Ç—å –Ω–µ –≤–µ—Ä–Ω—É–ª–∞—Å—å –∫ —Ç–µ–±–µ!",
# #     "@{username} –º–µ—Ç–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ –≤–æ–∑–¥—É—Ö, –Ω–æ –æ–Ω–∞ —Ä–µ—à–∏–ª–∞ –ø–æ–∏–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ –¥–æ–≥–æ–Ω—è–ª–∫–∏!",
# #     "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{username} —á—É—Ç—å –Ω–µ —É—Å—Ç—Ä–æ–∏–ª–∞ –∞–≤—Ç–æ–≥–æ–ª, –Ω–æ —Ç—ã –≤–æ–≤—Ä–µ–º—è –æ—Ç–ø—Ä—ã–≥–Ω—É–ª!",
# #     "@{username}, —Ç—ã —á—É—Ç—å –Ω–µ —É–≥–æ—Å—Ç–∏–ª —Å–µ–±—è —Å–æ—Å–∏—Å–∫–æ–π ‚Äî –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ —Å —Ä–∞–Ω–¥–æ–º–æ–º!",
# # ]
# #
# # ZERO_POINTS_MESSAGES = [
# #     "@{username} –æ—Å—Ç–∞–ª—Å—è –±–µ–∑ –±–∞–ª–ª–æ–≤ –∏ –≤—ã–ª–µ—Ç–µ–ª –∏–∑ –≥–æ–Ω–∫–∏! –í—Å–µ –±—É–ª–∫–∏ —Ä–∞—Å—Ç–∞—è–ª–∏.",
# #     "–ë–∞–ª–ª—ã @{username} –æ–±–Ω—É–ª–∏–ª–∏—Å—å ‚Äî –ø—Ä–æ—â–∞–π, —Å–æ—Å–∏—Å–æ—á–Ω–∞—è —Å–ª–∞–≤–∞ –∏ –±—É–ª–∫–∏!",
# #     "@{username} –¥–æ—Å—Ç–∏–≥ –¥–Ω–∞: 0 –±–∞–ª–ª–æ–≤, 0 –±—É–ª–æ–∫, 0 —à–∞–Ω—Å–æ–≤!",
# #     "–°–æ—Å–∏—Å–æ—á–Ω–∞—è –∫–∞—Ä—å–µ—Ä–∞ @{username} —Ä—É—Ö–Ω—É–ª–∞ ‚Äî 0 –±–∞–ª–ª–æ–≤, –±—É–ª–∫–∏ –∫–æ–Ω—Ñ–∏—Å–∫–æ–≤–∞–Ω—ã!",
# #     "@{username} —Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –±–∞–Ω–∫—Ä–æ—Ç –±—É–ª–æ—á–Ω–æ–π –≤–æ–π–Ω—ã ‚Äî –Ω–∏ –±–∞–ª–ª–æ–≤, –Ω–∏ –±—É–ª–æ–∫!",
# # ]
# #
# # NO_USERNAME_MESSAGES = [
# #     "–£ @{old_target} –Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞, –∫–∏–¥–∞–µ–º –≤ @{new_target}!",
# #     "@{old_target} —Å–∫—Ä—ã–ª —Å–≤–æ–π —é–∑–µ—Ä–Ω–µ–π–º, –ø–æ–ø–∞–ª –ø–æ–¥ —Ä–∞–∑–¥–∞—á—É @{new_target}!",
# #     "–ë–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞ —É @{old_target}? –õ–æ–≤–∏, @{new_target}!",
# #     "@{old_target} –æ–∫–∞–∑–∞–ª—Å—è –±–µ–∑—ã–º—è–Ω–Ω—ã–º, —Å–æ—Å–∏—Å–∫–∞ —É–ª–µ—Ç–µ–ª–∞ –∫ @{new_target}!",
# # ]
# #
# #
# # @sausage_game_r.message(Command("sausage", "—Å–æ—Å–∏—Å–∫–∞"))
# # async def sausage_throw_handler(message: Message, bot: Bot):
# #     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /sausage –∏–ª–∏ /—Å–æ—Å–∏—Å–∫–∞ @username: –∫–∏–¥–∞–µ–º —Å–æ—Å–∏—Å–∫—É –≤ –¥—Ä—É–≥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —é–º–æ—Ä–æ–º."""
# #     if message.chat.type == "private":
# #         await message.reply(
# #             "–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö! üå≠"
# #         )
# #         return
# #
# #     chat_id = message.chat.id
# #     attacker = message.from_user
# #
# #     if not message.text.split(maxsplit=1)[1:]:
# #         await message.reply(
# #             "–£–∫–∞–∂–∏, –≤ –∫–æ–≥–æ –∫–∏–Ω—É—Ç—å —Å–æ—Å–∏—Å–∫—É! –ü—Ä–∏–º–µ—Ä: /sausage @username –∏–ª–∏ /—Å–æ—Å–∏—Å–∫–∞ @username"
# #         )
# #         return
# #
# #     target_username = message.text.split(maxsplit=1)[1].strip()
# #     if not target_username.startswith("@"):
# #         await message.reply(
# #             "–Æ–∑–µ—Ä–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å @! –ü—Ä–∏–º–µ—Ä: /sausage @username –∏–ª–∏ /—Å–æ—Å–∏—Å–∫–∞ @username"
# #         )
# #         return
# #     target_username = target_username[1:]
# #
# #     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–∫–æ–≤ –ø–µ—Ä–µ–¥ –±—Ä–æ—Å–∫–æ–º
# #     SAUSAGE_THROW_COST = (
# #         await get_game_setting("sausage_throw_cost") or 2
# #     )  # –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 2
# #     attacker_points = await get_user_points(attacker.id, chat_id)
# #     if attacker_points < SAUSAGE_THROW_COST:
# #         await handle_no_points(
# #             bot, chat_id, attacker, attacker_points, SAUSAGE_THROW_COST
# #         )
# #         return
# #
# #     target_data = await get_user_by_username(chat_id, target_username)
# #     if not target_data or not target_data.username:
# #         old_target = target_username
# #         target_data = await get_random_user(chat_id)
# #         if not target_data or not target_data.username:
# #             await message.reply("–í —á–∞—Ç–µ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —é–∑–µ—Ä–Ω–µ–π–º–∞–º–∏ –¥–ª—è –∞—Ç–∞–∫–∏! üå≠")
# #             return
# #         if target_data.telegram_id == attacker.id:
# #             target_data = await get_random_user(chat_id)
# #             if (
# #                 not target_data
# #                 or not target_data.username
# #                 or target_data.telegram_id == attacker.id
# #             ):
# #                 await message.reply(
# #                     "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∂–µ—Ä—Ç–≤—É —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º! üå≠"
# #                 )
# #                 return
# #         message_text = random.choice(NO_USERNAME_MESSAGES).format(
# #             old_target=old_target, new_target=target_data.username
# #         )
# #         await message.reply(message_text)
# #
# #     await process_sausage_throw(bot, chat_id, attacker, target_data.username)
# #
# #
# # @sausage_game_r.message(Command("random_sausage", "—Å–ª—É—á–∞–π–Ω–∞—è—Å–æ—Å–∏—Å–∫–∞"))
# # async def random_sausage_throw_handler(message: Message, bot: Bot):
# #     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /random_sausage: –∫–∏–¥–∞–µ–º —Å–æ—Å–∏—Å–∫—É –≤ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–≥—Ä—ã."""
# #     if message.chat.type == "private":
# #         await message.reply(
# #             "–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö! üå≠"
# #         )
# #         return
# #
# #     chat_id = message.chat.id
# #     attacker = message.from_user
# #
# #     attacker_data = await get_user_by_id(attacker.id, chat_id)
# #     if not attacker_data or not attacker_data.in_game:
# #         await message.reply("–¢—ã –Ω–µ –≤ –∏–≥—Ä–µ! –°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç—É–ø–∏ –≤ —á–∞—Ç –∏ —Å—Ç–∞–Ω—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º.")
# #         return
# #
# #     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–∫–æ–≤ –ø–µ—Ä–µ–¥ –±—Ä–æ—Å–∫–æ–º
# #     SAUSAGE_THROW_COST = (
# #         await get_game_setting("sausage_throw_cost") or 2
# #     )  # –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 2
# #     attacker_points = await get_user_points(attacker.id, chat_id)
# #     if attacker_points < SAUSAGE_THROW_COST:
# #         await handle_no_points(
# #             bot, chat_id, attacker, attacker_points, SAUSAGE_THROW_COST, is_random=True
# #         )
# #         return
# #
# #     target_data = await get_random_user(chat_id)
# #     if not target_data:
# #         await message.reply("–í —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —Å–æ—Å–∏—Å–æ—á–Ω–æ–π –∞—Ç–∞–∫–∏!")
# #         return
# #
# #     if not target_data.username or target_data.telegram_id == attacker.id:
# #         old_target = target_data.username or "–∫–æ–≥–æ-—Ç–æ –±–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞"
# #         target_data = await get_random_user(chat_id)
# #         if (
# #             not target_data
# #             or not target_data.username
# #             or target_data.telegram_id == attacker.id
# #         ):
# #             await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∂–µ—Ä—Ç–≤—É —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º! üå≠")
# #             return
# #         message_text = random.choice(NO_USERNAME_MESSAGES).format(
# #             old_target=old_target, new_target=target_data.username
# #         )
# #         await message.reply(message_text)
# #
# #     await process_sausage_throw(bot, chat_id, attacker, target_data.username)
# #
# #
# # async def handle_no_points(
# #     bot: Bot, chat_id: int, attacker, points: int, cost: int, is_random: bool = False
# # ):
# #     """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Ç—É–∞—Ü–∏–∏, –∫–æ–≥–¥–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤ –¥–ª—è –±—Ä–æ—Å–∫–∞."""
# #     global attempts_counter
# #
# #     # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —á–∞—Ç–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
# #     if chat_id not in attempts_counter:
# #         attempts_counter[chat_id] = {}
# #
# #     # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# #     user_attempts = attempts_counter[chat_id].get(attacker.id, 0) + 1
# #     attempts_counter[chat_id][attacker.id] = user_attempts
# #
# #     if user_attempts >= 3:
# #         # –¢—Ä–µ—Ç—å—è –ø–æ–ø—ã—Ç–∫–∞ ‚Äî –≤—ã–≤–æ–¥–∏–º –¥–æ—Ö–æ–¥—á–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
# #         message_text = NO_POINTS_THIRD_ATTEMPT_MESSAGE.format(
# #             username=attacker.username, points=points, cost=cost
# #         )
# #         await bot.send_message(chat_id, message_text)
# #         attempts_counter[chat_id][attacker.id] = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
# #         logger.info(
# #             f"@{attacker.username} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫ –±–µ–∑ –æ—á–∫–æ–≤ –≤ —á–∞—Ç–µ {chat_id}"
# #         )
# #     else:
# #         # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ—Ö–≤–∞—Ç–∫–µ –æ—á–∫–æ–≤
# #         messages = NO_POINTS_RANDOM_MESSAGES if is_random else NO_POINTS_MESSAGES
# #         message_text = random.choice(messages).format(
# #             username=attacker.username, points=points, cost=cost
# #         )
# #         await bot.send_message(chat_id, message_text)
# #         logger.info(
# #             f"@{attacker.username} –ø—ã—Ç–∞–ª—Å—è –±—Ä–æ—Å–∏—Ç—å —Å–æ—Å–∏—Å–∫—É –±–µ–∑ –æ—á–∫–æ–≤ ({points}/{cost}), –ø–æ–ø—ã—Ç–∫–∞ {user_attempts}"
# #         )
# #
# #
# # async def process_sausage_throw(bot: Bot, chat_id: int, attacker, target_username: str):
# #     """–û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –±—Ä–æ—Å–∫–∞ —Å–æ—Å–∏—Å–∫–∏ –¥–ª—è –æ–±–µ–∏—Ö –∫–æ–º–∞–Ω–¥."""
# #     global attempts_counter
# #
# #     SAUSAGE_THROW_COST = (
# #         await get_game_setting("sausage_throw_cost") or 2
# #     )  # –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 2
# #     SAUSAGE_HIT_DAMAGE = await get_game_setting("sausage_hit_damage") or 3
# #     SAUSAGE_PENALTY = await get_game_setting("sausage_penalty") or 3
# #     SAUSAGE_BONUS = await get_game_setting("sausage_bonus") or 3
# #     MISS_CHANCE = await get_game_setting("miss_chance") or 10
# #
# #     attacker_data = await get_user_by_id(attacker.id, chat_id)
# #     if not attacker_data or not attacker_data.in_game:
# #         await bot.send_message(
# #             chat_id, "–¢—ã –Ω–µ –≤ –∏–≥—Ä–µ! –°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç—É–ø–∏ –≤ —á–∞—Ç –∏ —Å—Ç–∞–Ω—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º."
# #         )
# #         return
# #
# #     target_data = await get_user_by_username(chat_id, target_username)
# #     if not target_data or not target_data.username:
# #         await bot.send_message(
# #             chat_id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ @{target_username} —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º!"
# #         )
# #         return
# #
# #     try:
# #         chat_member = await bot.get_chat_member(chat_id, target_data.telegram_id)
# #         if chat_member.status in ["left", "kicked"]:
# #             message_text = random.choice(NOT_IN_CHAT_MESSAGES).format(
# #                 attacker=attacker.username, target=target_data.username
# #             )
# #             await bot.send_message(chat_id, message_text)
# #             return
# #     except Exception as e:
# #         await bot.send_message(
# #             chat_id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å @{target_username} –≤ —á–∞—Ç–µ!"
# #         )
# #         logger.error(
# #             f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ @{target_username} –≤ —á–∞—Ç–µ {chat_id}: {e}"
# #         )
# #         return
# #
# #     if not target_data.in_game:
# #         await bot.send_message(
# #             chat_id, f"@{target_username} –Ω–µ –≤ –∏–≥—Ä–µ, –Ω–µ–ª—å–∑—è –∫–∏–Ω—É—Ç—å —Å–æ—Å–∏—Å–∫—É!"
# #         )
# #         return
# #
# #     # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –±—Ä–æ—Å–∫–µ
# #     throw_message = random.choice(THROW_MESSAGES).format(
# #         attacker=attacker.username, target=target_data.username
# #     )
# #     await bot.send_message(chat_id, throw_message)
# #     await asyncio.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞
# #
# #     # –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–ª—ã –∞—Ç–∞–∫—É—é—â–µ–≥–æ –∑–∞ –±—Ä–æ—Å–æ–∫
# #     attacker_points = await get_user_points(attacker.id, chat_id)
# #     new_attacker_points = attacker_points - SAUSAGE_THROW_COST
# #     await update_user_points(attacker.id, chat_id, -SAUSAGE_THROW_COST)
# #
# #     # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫, —Ç–∞–∫ –∫–∞–∫ –±—Ä–æ—Å–æ–∫ —É—Å–ø–µ—à–µ–Ω
# #     if chat_id in attempts_counter and attacker.id in attempts_counter[chat_id]:
# #         attempts_counter[chat_id][attacker.id] = 0
# #
# #     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±–Ω—É–ª–∏–ª–∏—Å—å –ª–∏ –±–∞–ª–ª—ã –∞—Ç–∞–∫—É—é—â–µ–≥–æ –ø–æ—Å–ª–µ –±—Ä–æ—Å–∫–∞
# #     if new_attacker_points == 0:
# #         await reset_user_on_zero_points(attacker.id, chat_id)
# #         message_text = random.choice(ZERO_POINTS_MESSAGES).format(
# #             username=attacker.username
# #         )
# #         await bot.send_message(chat_id, message_text)
# #         return
# #
# #     # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø—Ä–æ–º–∞—Ö–∞
# #     if random.randint(1, 100) <= MISS_CHANCE:
# #         message_text = random.choice(MISS_MESSAGES).format(
# #             attacker=attacker.username, target=target_data.username
# #         )
# #         await bot.send_message(chat_id, message_text)
# #         return
# #
# #     # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–ª—ã –∏ –±—É–ª–æ—á–∫–∏ –∂–µ—Ä—Ç–≤—ã
# #     target_points = await get_user_points(target_data.telegram_id, chat_id)
# #     target_buns = await get_user_buns_stats(target_data.telegram_id, chat_id)
# #
# #     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∂–µ—Ä—Ç–≤—ã –±—É–ª–æ—á–∫–∞ —Å —á–∞—Å—Ç–∏—á–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º "—Å–æ—Å–∏—Å–∫–∞"
# #     has_sausage = any("—Å–æ—Å–∏—Å–∫–∞" in bun["bun"].lower() for bun in target_buns)
# #
# #     # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ø–∞–¥–∞–Ω–∏–µ
# #     if target_points > 0:
# #         if has_sausage:
# #             new_target_points = target_points + SAUSAGE_BONUS
# #             await update_user_points(target_data.telegram_id, chat_id, SAUSAGE_BONUS)
# #             message_text = random.choice(SAUSAGE_BONUS_MESSAGES).format(
# #                 attacker=attacker.username,
# #                 target=target_data.username,
# #                 bonus=SAUSAGE_BONUS,
# #                 new_points=new_target_points,
# #             )
# #             await bot.send_message(chat_id, message_text)
# #             await bot.send_message(chat_id, HOTDOG_EMOJI)
# #         else:
# #             new_target_points = max(0, target_points - SAUSAGE_HIT_DAMAGE)
# #             await update_user_points(
# #                 target_data.telegram_id, chat_id, -SAUSAGE_HIT_DAMAGE
# #             )
# #             message_text = random.choice(HIT_MESSAGES).format(
# #                 attacker=attacker.username,
# #                 target=target_data.username,
# #                 old_points=target_points,
# #                 new_points=new_target_points,
# #             )
# #             await bot.send_message(chat_id, message_text)
# #             await bot.send_message(chat_id, HIT_EMOJI)
# #
# #             # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±–Ω—É–ª–∏–ª–∏—Å—å –ª–∏ –±–∞–ª–ª—ã –∂–µ—Ä—Ç–≤—ã
# #             if new_target_points == 0:
# #                 await reset_user_on_zero_points(target_data.telegram_id, chat_id)
# #                 message_text = random.choice(ZERO_POINTS_MESSAGES).format(
# #                     username=target_data.username
# #                 )
# #                 await bot.send_message(chat_id, message_text)
# #     else:
# #         new_attacker_points = max(0, new_attacker_points - SAUSAGE_PENALTY)
# #         await update_user_points(attacker.id, chat_id, -SAUSAGE_PENALTY)
# #         message_text = random.choice(PENALTY_MESSAGES).format(
# #             attacker=attacker.username,
# #             target=target_data.username,
# #             penalty=SAUSAGE_PENALTY,
# #             new_points=new_attacker_points,
# #         )
# #         await bot.send_message(chat_id, message_text)
# #         await bot.send_message(chat_id, PENALTY_EMOJI)
# #
# #         # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±–Ω—É–ª–∏–ª–∏—Å—å –ª–∏ –±–∞–ª–ª—ã –∞—Ç–∞–∫—É—é—â–µ–≥–æ –ø–æ—Å–ª–µ —à—Ç—Ä–∞—Ñ–∞
# #         if new_attacker_points == 0:
# #             await reset_user_on_zero_points(attacker.id, chat_id)
# #             message_text = random.choice(ZERO_POINTS_MESSAGES).format(
# #                 username=attacker.username
# #             )
# #             await bot.send_message(chat_id, message_text)
# from aiogram import Bot, Router
# from aiogram.types import Message
# from aiogram.filters import Command
# from database.queries import (
#     get_user_by_id,
#     get_user_points,
#     update_user_points,
#     get_user_by_username,
#     get_user_buns_stats,
#     get_random_user,
#     get_game_setting,
#     reset_user_on_zero_points,
# )
# from logger import logger
# import random
# import asyncio
#
# sausage_game_r = Router()
#
# # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
# HOTDOG_EMOJI = "üå≠"  # –ë–æ–Ω—É—Å –∑–∞ —Å–æ—Å–∏—Å–∫—É
# HIT_EMOJI = "üí•"  # –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ
# PENALTY_EMOJI = "üò¢"  # –®—Ç—Ä–∞—Ñ –∑–∞ –∞—Ç–∞–∫—É –±–µ–∑–æ—Ä—É–∂–Ω–æ–≥–æ
#
# # –°—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫ –±—Ä–æ—Å–∫–∞ –±–µ–∑ –æ—á–∫–æ–≤: {chat_id: {user_id: int}}
# attempts_counter = {}
#
# # –Æ–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—Ä–∞–∑—ã
# NO_POINTS_MESSAGES = [
#     "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å–æ—Å–∏—Å–æ—á–Ω—ã—Ö –±–∞–ª–ª–æ–≤ ({points}/{cost})! –ò–¥–∏ –∏—Å–ø–µ–∫–∏ –±—É–ª–æ—á–∫—É!",
#     "–°–æ—Å–∏—Å–∫–∏ –Ω–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ, @{username}! –£ —Ç–µ–±—è —Ç–æ–ª—å–∫–æ {points}/{cost} –±–∞–ª–ª–æ–≤.",
#     "–¢–≤–æ–∏ –∫–∞—Ä–º–∞–Ω—ã –ø—É—Å—Ç—ã, @{username}! {points}/{cost} ‚Äî —ç—Ç–æ –Ω–µ —Å–æ—Å–∏—Å–æ—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å.",
#     "–ë–µ–∑ –±–∞–ª–ª–æ–≤ —Å–æ—Å–∏—Å–∫—É –Ω–µ –∫–∏–Ω–µ—à—å, @{username}! ({points}/{cost})",
# ]
#
# NO_POINTS_RANDOM_MESSAGES = [
#     "@{username} –ø–æ–ø—ã—Ç–∞–ª—Å—è —à–≤—ã—Ä–Ω—É—Ç—å —Å–ª—É—á–∞–π–Ω—É—é —Å–æ—Å–∏—Å–∫—É, –Ω–æ –±–∞–ª–ª–æ–≤ –Ω–µ—Ç ({points}/{cost})!",
#     "–°–æ—Å–∏—Å–∫–∞ –æ—Å—Ç–∞–ª–∞—Å—å –≤ –∫–∞—Ä–º–∞–Ω–µ —É @{username} ‚Äî –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–ª–ª–æ–≤ ({points}/{cost})!",
#     "@{username} —Ö–æ—Ç–µ–ª –∫–∏–Ω—É—Ç—å —Å–æ—Å–∏—Å–∫—É –Ω–∞—É–≥–∞–¥, –Ω–æ –ø—É—Å—Ç—ã–µ –∫–∞—Ä–º–∞–Ω—ã —Å–∫–∞–∑–∞–ª–∏ '–Ω–µ—Ç' ({points}/{cost})!",
#     "–†–∞–Ω–¥–æ–º–Ω–∞—è —Å–æ—Å–∏—Å–∫–∞? –ù–µ —Å–µ–≥–æ–¥–Ω—è, @{username}! –ë–∞–ª–ª–æ–≤ –º–∞–ª–æ ({points}/{cost}).",
# ]
#
# NO_POINTS_THIRD_ATTEMPT_MESSAGE = (
#     "–≠–π, @{username}, —Ö–≤–∞—Ç–∏—Ç –ø—ã—Ç–∞—Ç—å—Å—è! –£ —Ç–µ–±—è {points} –±–∞–ª–ª–æ–≤, –∞ –Ω—É–∂–Ω–æ {cost}, —á—Ç–æ–±—ã –∫–∏–Ω—É—Ç—å —Å–æ—Å–∏—Å–∫—É. "
#     "–ü–æ–∫–∞ –Ω–µ –Ω–∞–±–µ—Ä–µ—à—å –±–∞–ª–ª—ã, –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–π–¥–µ—Ç! –ò–¥–∏ –∑–∞ –±—É–ª–æ—á–∫–∞–º–∏! üå≠"
# )
#
# NO_POINTS_AFTER_THROW_MESSAGES = [
#     "–ë–∞–ª–ª—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, @{username}! –£ —Ç–µ–±—è —Ç–µ–ø–µ—Ä—å {points}/{cost} ‚Äî –ø–æ—Ä–∞ –∑–∞ –±—É–ª–æ—á–∫–∞–º–∏!",
#     "–°–æ—Å–∏—Å–∫–∞ —É–ª–µ—Ç–µ–ª–∞, –∞ —Å –Ω–µ–π –∏ —Ç–≤–æ–∏ –±–∞–ª–ª—ã, @{username}! –û—Å—Ç–∞–ª–æ—Å—å {points}/{cost}.",
#     "@{username}, —Ç—ã –≤ –Ω—É–ª–µ ({points}/{cost})! –ë—É–ª–∫–∏ –∑–æ–≤—É—Ç!",
#     "–ë—Ä–æ—Å–æ–∫ –±—ã–ª, –Ω–æ –±–∞–ª–ª—ã —Ä–∞—Å—Ç–∞—è–ª–∏, @{username}! ({points}/{cost})",
# ]
#
# THROW_MESSAGES = [
#     "üå≠üí® @{attacker} —à–≤—ã—Ä—è–µ—Ç —Å–æ—Å–∏—Å–∫—É –≤ @{target}! –õ–µ—Ç–∏—Ç...",
#     "üå≠üí® @{attacker} –º–µ—Ç–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ @{target}! –°–º–æ—Ç—Ä–∏–º...",
#     "üå≠üí® –°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} —É—Å—Ç—Ä–µ–º–∏–ª–∞—Å—å –∫ @{target}! –ß—Ç–æ –±—É–¥–µ—Ç?",
#     "üå≠üí® @{attacker} –∑–∞—Ä—è–¥–∏–ª —Å–æ—Å–∏—Å–∫—É –≤ —Å—Ç–æ—Ä–æ–Ω—É @{target}! –ñ–¥–µ–º...",
#     "üå≠üí® @{attacker} –±—Ä–æ—Å–∏–ª —Å–æ—Å–∏—Å–∫—É –≤ @{target}! –í –ø–æ–ª–µ—Ç–µ...",
# ]
#
# HIT_MESSAGES = [
#     "@{attacker} –º–µ—Ç–∫–æ –ø–æ–ø–∞–ª —Å–æ—Å–∏—Å–∫–æ–π –≤ @{target}! –£ @{target} –±—ã–ª–æ {old_points}, —Å—Ç–∞–ª–æ {new_points}.",
#     "@{attacker} –∑–∞—Ä—è–¥–∏–ª —Å–æ—Å–∏—Å–∫–æ–π –ø—Ä—è–º–æ –≤ @{target}! –¢–µ–ø–µ—Ä—å —É –∂–µ—Ä—Ç–≤—ã {new_points} –≤–º–µ—Å—Ç–æ {old_points}.",
#     "–ë–∞–º! @{attacker} —É–≥–æ–¥–∏–ª —Å–æ—Å–∏—Å–∫–æ–π –≤ @{target}! –ë–∞–ª–ª—ã —É–ø–∞–ª–∏ —Å {old_points} –¥–æ {new_points}.",
#     "@{attacker} —É—Å—Ç—Ä–æ–∏–ª —Å–æ—Å–∏—Å–æ—á–Ω—ã–π —Å—é—Ä–ø—Ä–∏–∑ –¥–ª—è @{target}! –û—Å—Ç–∞–ª–æ—Å—å {new_points} –±–∞–ª–ª–æ–≤ –≤–º–µ—Å—Ç–æ {old_points}.",
#     "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} –ø—Ä–∏–ª–µ—Ç–µ–ª–∞ –≤ @{target}! –ë–∞–ª–ª—ã —Ç–∞—é—Ç: {old_points} ‚Üí {new_points}.",
# ]
#
# PENALTY_MESSAGES = [
#     "@{attacker} –∫–∏–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ @{target}, –Ω–æ —Ç–æ—Ç –±—ã–ª –±–µ–∑–æ—Ä—É–∂–µ–Ω! –†–∞—Å–ø–ª–∞—Ç–∞: –º–∏–Ω—É—Å {penalty} –±–∞–ª–ª–æ–≤, –æ—Å—Ç–∞–ª–æ—Å—å {new_points}.",
#     "@{attacker} –∑—Ä—è —à–≤—ã—Ä–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ –ø—É—Å—Ç—ã–µ –∫–∞—Ä–º–∞–Ω—ã @{target}! –®—Ç—Ä–∞—Ñ {penalty}, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è {new_points} –±–∞–ª–ª–æ–≤.",
#     "–û–π-–æ–π, @{attacker}! @{target} –æ–∫–∞–∑–∞–ª—Å—è –±–µ–∑ –±–∞–ª–ª–æ–≤, –∏ —Å–æ—Å–∏—Å–∫–∞ –≤–µ—Ä–Ω—É–ª–∞—Å—å –±—É–º–µ—Ä–∞–Ω–≥–æ–º: -{penalty}, –æ—Å—Ç–∞–ª–æ—Å—å {new_points}.",
#     "@{attacker} –ø–æ–ø–∞–ª —Å–æ—Å–∏—Å–∫–æ–π –≤ @{target}, –Ω–æ –±–µ–∑ —Ç–æ–ª–∫—É! –®—Ç—Ä–∞—Ñ –∑–∞ –ø–æ–¥–ª–æ—Å—Ç—å: -{penalty}, –∏—Ç–æ–≥–æ {new_points}.",
#     "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} —É–≥–æ–¥–∏–ª–∞ –≤ @{target}, –Ω–æ –±–µ–∑ —Ç–æ–ª–∫—É! @{attacker} —Ç–µ—Ä—è–µ—Ç {penalty}, —Ç–µ–ø–µ—Ä—å {new_points} –±–∞–ª–ª–æ–≤.",
# ]
#
# NOT_IN_CHAT_MESSAGES = [
#     "–°–æ—Å–∏—Å–∫–∞ —É–ª–µ—Ç–µ–ª–∞ –≤ –ø—É—Å—Ç–æ—Ç—É, @{target} –¥–∞–≤–Ω–æ —Å–±–µ–∂–∞–ª!",
#     "@{target} –≥–¥–µ-—Ç–æ —Å–ø—Ä—è—Ç–∞–ª—Å—è, –∏ —Ç–≤–æ—è —Å–æ—Å–∏—Å–∫–∞ –ø—Ä–æ–ø–∞–ª–∞ –∑—Ä—è, @{attacker}!",
#     "–ö—É–¥–∞ –∫–∏–Ω—É–ª, @{attacker}? @{target} —É–∂–µ –Ω–µ –≤ —á–∞—Ç–µ, —Å–æ—Å–∏—Å–∫–∞ –ø–æ—Ç–µ—Ä—è–ª–∞—Å—å!",
#     "@{attacker} —à–≤—ã—Ä–Ω—É–ª —Å–æ—Å–∏—Å–∫—É, –Ω–æ @{target} –∏—Å–ø–∞—Ä–∏–ª—Å—è –∏–∑ —á–∞—Ç–∞!",
#     "–°–æ—Å–∏—Å–∫–∞ –Ω–µ –¥–æ–ª–µ—Ç–µ–ª–∞ ‚Äî @{target} —Å–±–µ–∂–∞–ª –æ—Ç –±—É–ª–æ—á–Ω–æ–π –±–∏—Ç–≤—ã!",
# ]
#
# SAUSAGE_BONUS_MESSAGES = [
#     "@{attacker} –∫–∏–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ @{target}, –Ω–æ —É —Ç–æ–≥–æ —É–∂–µ –±—ã–ª–∞ —Å–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ! –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ: +{bonus} –±–∞–ª–ª–æ–≤, —Ç–µ–ø–µ—Ä—å {new_points}!",
#     "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} –ø–æ–ø–∞–ª–∞ –≤ @{target}, –∏ —Ç–æ—Ç –æ–±—Ä–∞–¥–æ–≤–∞–ª—Å—è ‚Äî –æ–Ω —Å–æ—Å–∏—Å–æ—á–Ω—ã–π –º–∞—Å—Ç–µ—Ä! +{bonus}, –∏—Ç–æ–≥–æ {new_points}.",
#     "@{target} –ø–æ–π–º–∞–ª —Å–æ—Å–∏—Å–∫—É –æ—Ç @{attacker} –∏ –≤—Å–ø–æ–º–Ω–∏–ª —Å–≤–æ–∏ —Å–æ—Å–∏—Å–æ—á–Ω—ã–µ –∫–æ—Ä–Ω–∏! –ë–æ–Ω—É—Å: +{bonus}, —Å—Ç–∞–ª–æ {new_points}.",
#     "@{attacker}, —Ç–≤–æ—è —Å–æ—Å–∏—Å–∫–∞ —Å–¥–µ–ª–∞–ª–∞ @{target} —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ! –û–Ω –ø–æ–ª—É—á–∞–µ—Ç +{bonus} –±–∞–ª–ª–æ–≤, —Ç–µ–ø–µ—Ä—å {new_points}.",
#     "–ë—É–º! @{attacker} –ø–æ–ø–∞–ª –≤ @{target}, –Ω–æ —Å–æ—Å–∏—Å–∫–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å –Ω–∞ –µ–≥–æ —Å—Ç–æ—Ä–æ–Ω–µ! +{bonus}, –∏—Ç–æ–≥–æ {new_points}.",
# ]
#
# RANDOM_Sausage_MESSAGES = [
#     "@{attacker} —à–≤—ã—Ä–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –Ω–∞—É–≥–∞–¥ –∏ —Ü–µ–ª–∏—Ç—Å—è –≤ @{target}!",
#     "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} —É–ª–µ—Ç–µ–ª–∞ –≤ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–µ–≥–æ ‚Äî @{target}!",
#     "@{attacker} —Ä–µ—à–∏–ª —Å—ã–≥—Ä–∞—Ç—å –≤ —Å–æ—Å–∏—Å–æ—á–Ω—É—é —Ä—É–ª–µ—Ç–∫—É ‚Äî @{target} –ø–æ–¥ –ø—Ä–∏—Ü–µ–ª–æ–º!",
#     "–°–ª—É—á–∞–π–Ω—ã–π –±—Ä–æ—Å–æ–∫ –æ—Ç @{attacker}, –∏ @{target} —Å—Ç–∞–ª –º–∏—à–µ–Ω—å—é!",
#     "@{attacker} –∫–∏–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ —Ç–æ–ª–ø—É, –∞ –ø–æ–ø–∞–ª –≤ @{target}!",
# ]
#
# MISS_MESSAGES = [
#     "@{attacker} –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è! –°–æ—Å–∏—Å–∫–∞ —É–ª–µ—Ç–µ–ª–∞ –≤ –∑–∞–∫–∞—Ç.",
#     "–û–π! @{attacker} –Ω–µ –ø–æ–ø–∞–ª –≤ @{target}, –æ–Ω–∞ –ø—Ä–æ–ª–µ—Ç–µ–ª–∞ –º–∏–º–æ!",
#     "@{attacker} –º–µ—Ç–∏–ª –≤ @{target}, –Ω–æ —Å–æ—Å–∏—Å–∫–∞ —Ä–µ—à–∏–ª–∞ —É–π—Ç–∏ –≤ —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ–ª—ë—Ç!",
#     "–ü—Ä–æ–º–∞—Ö! @{attacker} –Ω–µ —É–≥–æ–¥–∏–ª –≤ @{target}, —Å–æ—Å–∏—Å–∫–∞ –ø—Ä–æ–ø–∞–ª–∞ –∑—Ä—è.",
#     "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} –Ω–µ –¥–æ–ª–µ—Ç–µ–ª–∞ –¥–æ @{target} ‚Äî —Ç–æ—á–Ω–æ—Å—Ç—å –ø–æ–¥–∫–∞—á–∞–ª–∞!",
# ]
#
# SELF_HIT_MESSAGES = [
#     "–°–æ—Å–∏—Å–∫–∞ —á—É—Ç—å –Ω–µ –ø–æ–ø–∞–ª–∞ –≤ —Ç–µ–±—è —Å–∞–º–æ–≥–æ, @{username}, –Ω–æ —Ç—ã —É–≤–µ—Ä–Ω—É–ª—Å—è!",
#     "@{username} —à–≤—ã—Ä–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –∏ —á—É—Ç—å –Ω–µ —Å—Ç–∞–ª –∂–µ—Ä—Ç–≤–æ–π —Å–∞–º ‚Äî –ª–æ–≤–∫–æ—Å—Ç—å —Å–ø–∞—Å–ª–∞!",
#     "–û–π-–æ–π, @{username}! –°–æ—Å–∏—Å–∫–∞ —Å–¥–µ–ª–∞–ª–∞ –∫—Ä—É–≥ –∏ —á—É—Ç—å –Ω–µ –≤–µ—Ä–Ω—É–ª–∞—Å—å –∫ —Ç–µ–±–µ!",
#     "@{username} –º–µ—Ç–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ –≤–æ–∑–¥—É—Ö, –Ω–æ –æ–Ω–∞ —Ä–µ—à–∏–ª–∞ –ø–æ–∏–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ –¥–æ–≥–æ–Ω—è–ª–∫–∏!",
#     "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{username} —á—É—Ç—å –Ω–µ —É—Å—Ç—Ä–æ–∏–ª–∞ –∞–≤—Ç–æ–≥–æ–ª, –Ω–æ —Ç—ã –≤–æ–≤—Ä–µ–º—è –æ—Ç–ø—Ä—ã–≥–Ω—É–ª!",
#     "@{username}, —Ç—ã —á—É—Ç—å –Ω–µ —É–≥–æ—Å—Ç–∏–ª —Å–µ–±—è —Å–æ—Å–∏—Å–∫–æ–π ‚Äî –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ —Å —Ä–∞–Ω–¥–æ–º–æ–º!",
# ]
#
# ZERO_POINTS_MESSAGES = [
#     "@{username} –æ—Å—Ç–∞–ª—Å—è –±–µ–∑ –±–∞–ª–ª–æ–≤ –∏ –≤—ã–ª–µ—Ç–µ–ª –∏–∑ –≥–æ–Ω–∫–∏! –í—Å–µ –±—É–ª–∫–∏ —Ä–∞—Å—Ç–∞—è–ª–∏.",
#     "–ë–∞–ª–ª—ã @{username} –æ–±–Ω—É–ª–∏–ª–∏—Å—å ‚Äî –ø—Ä–æ—â–∞–π, —Å–æ—Å–∏—Å–æ—á–Ω–∞—è —Å–ª–∞–≤–∞ –∏ –±—É–ª–∫–∏!",
#     "@{username} –¥–æ—Å—Ç–∏–≥ –¥–Ω–∞: 0 –±–∞–ª–ª–æ–≤, 0 –±—É–ª–æ–∫, 0 —à–∞–Ω—Å–æ–≤!",
#     "–°–æ—Å–∏—Å–æ—á–Ω–∞—è –∫–∞—Ä—å–µ—Ä–∞ @{username} —Ä—É—Ö–Ω—É–ª–∞ ‚Äî 0 –±–∞–ª–ª–æ–≤, –±—É–ª–∫–∏ –∫–æ–Ω—Ñ–∏—Å–∫–æ–≤–∞–Ω—ã!",
#     "@{username} —Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –±–∞–Ω–∫—Ä–æ—Ç –±—É–ª–æ—á–Ω–æ–π –≤–æ–π–Ω—ã ‚Äî –Ω–∏ –±–∞–ª–ª–æ–≤, –Ω–∏ –±—É–ª–æ–∫!",
# ]
#
# NO_USERNAME_MESSAGES = [
#     "–£ @{old_target} –Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞, –∫–∏–¥–∞–µ–º –≤ @{new_target}!",
#     "@{old_target} —Å–∫—Ä—ã–ª —Å–≤–æ–π —é–∑–µ—Ä–Ω–µ–π–º, –ø–æ–ø–∞–ª –ø–æ–¥ —Ä–∞–∑–¥–∞—á—É @{new_target}!",
#     "–ë–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞ —É @{old_target}? –õ–æ–≤–∏, @{new_target}!",
#     "@{old_target} –æ–∫–∞–∑–∞–ª—Å—è –±–µ–∑—ã–º—è–Ω–Ω—ã–º, —Å–æ—Å–∏—Å–∫–∞ —É–ª–µ—Ç–µ–ª–∞ –∫ @{new_target}!",
# ]
#
#
# @sausage_game_r.message(Command("sausage", "—Å–æ—Å–∏—Å–∫–∞"))
# async def sausage_throw_handler(message: Message, bot: Bot):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /sausage –∏–ª–∏ /—Å–æ—Å–∏—Å–∫–∞ @username: –∫–∏–¥–∞–µ–º —Å–æ—Å–∏—Å–∫—É –≤ –¥—Ä—É–≥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —é–º–æ—Ä–æ–º."""
#     if message.chat.type == "private":
#         await message.reply(
#             "–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö! üå≠"
#         )
#         return
#
#     chat_id = message.chat.id
#     attacker = message.from_user
#
#     if not message.text.split(maxsplit=1)[1:]:
#         await message.reply(
#             "–£–∫–∞–∂–∏, –≤ –∫–æ–≥–æ –∫–∏–Ω—É—Ç—å —Å–æ—Å–∏—Å–∫—É! –ü—Ä–∏–º–µ—Ä: /sausage @username –∏–ª–∏ /—Å–æ—Å–∏—Å–∫–∞ @username"
#         )
#         return
#
#     target_username = message.text.split(maxsplit=1)[1].strip()
#     if not target_username.startswith("@"):
#         await message.reply(
#             "–Æ–∑–µ—Ä–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å @! –ü—Ä–∏–º–µ—Ä: /sausage @username –∏–ª–∏ /—Å–æ—Å–∏—Å–∫–∞ @username"
#         )
#         return
#     target_username = target_username[1:]
#
#     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–∫–æ–≤ –ø–µ—Ä–µ–¥ –±—Ä–æ—Å–∫–æ–º
#     SAUSAGE_THROW_COST = (
#         await get_game_setting("sausage_throw_cost") or 2
#     )  # –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 2
#     attacker_points = await get_user_points(attacker.id, chat_id)
#     if attacker_points < SAUSAGE_THROW_COST:
#         await handle_no_points(
#             bot, chat_id, attacker, attacker_points, SAUSAGE_THROW_COST
#         )
#         return
#
#     target_data = await get_user_by_username(chat_id, target_username)
#     if not target_data or not target_data.username:
#         old_target = target_username
#         target_data = await get_random_user(chat_id)
#         if not target_data or not target_data.username:
#             await message.reply("–í —á–∞—Ç–µ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —é–∑–µ—Ä–Ω–µ–π–º–∞–º–∏ –¥–ª—è –∞—Ç–∞–∫–∏! üå≠")
#             return
#         if target_data.telegram_id == attacker.id:
#             target_data = await get_random_user(chat_id)
#             if (
#                 not target_data
#                 or not target_data.username
#                 or target_data.telegram_id == attacker.id
#             ):
#                 await message.reply(
#                     "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∂–µ—Ä—Ç–≤—É —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º! üå≠"
#                 )
#                 return
#         message_text = random.choice(NO_USERNAME_MESSAGES).format(
#             old_target=old_target, new_target=target_data.username
#         )
#         await message.reply(message_text)
#
#     await process_sausage_throw(bot, chat_id, attacker, target_data.username)
#
#
# @sausage_game_r.message(Command("random_sausage", "—Å–ª—É—á–∞–π–Ω–∞—è—Å–æ—Å–∏—Å–∫–∞"))
# async def random_sausage_throw_handler(message: Message, bot: Bot):
#     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /random_sausage: –∫–∏–¥–∞–µ–º —Å–æ—Å–∏—Å–∫—É –≤ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–≥—Ä—ã."""
#     if message.chat.type == "private":
#         await message.reply(
#             "–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö! üå≠"
#         )
#         return
#
#     chat_id = message.chat.id
#     attacker = message.from_user
#
#     attacker_data = await get_user_by_id(attacker.id, chat_id)
#     if not attacker_data or not attacker_data.in_game:
#         await message.reply("–¢—ã –Ω–µ –≤ –∏–≥—Ä–µ! –°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç—É–ø–∏ –≤ —á–∞—Ç –∏ —Å—Ç–∞–Ω—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º.")
#         return
#
#     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–∫–æ–≤ –ø–µ—Ä–µ–¥ –±—Ä–æ—Å–∫–æ–º
#     SAUSAGE_THROW_COST = (
#         await get_game_setting("sausage_throw_cost") or 2
#     )  # –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 2
#     attacker_points = await get_user_points(attacker.id, chat_id)
#     if attacker_points < SAUSAGE_THROW_COST:
#         await handle_no_points(
#             bot, chat_id, attacker, attacker_points, SAUSAGE_THROW_COST, is_random=True
#         )
#         return
#
#     target_data = await get_random_user(chat_id)
#     if not target_data:
#         await message.reply("–í —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —Å–æ—Å–∏—Å–æ—á–Ω–æ–π –∞—Ç–∞–∫–∏!")
#         return
#
#     if not target_data.username or target_data.telegram_id == attacker.id:
#         old_target = target_data.username or "–∫–æ–≥–æ-—Ç–æ –±–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞"
#         target_data = await get_random_user(chat_id)
#         if (
#             not target_data
#             or not target_data.username
#             or target_data.telegram_id == attacker.id
#         ):
#             await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∂–µ—Ä—Ç–≤—É —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º! üå≠")
#             return
#         message_text = random.choice(NO_USERNAME_MESSAGES).format(
#             old_target=old_target, new_target=target_data.username
#         )
#         await message.reply(message_text)
#
#     await process_sausage_throw(bot, chat_id, attacker, target_data.username)
#
#
# async def handle_no_points(
#     bot: Bot, chat_id: int, attacker, points: int, cost: int, is_random: bool = False
# ):
#     """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Ç—É–∞—Ü–∏–∏, –∫–æ–≥–¥–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤ –¥–ª—è –±—Ä–æ—Å–∫–∞ –¥–æ –Ω–∞—á–∞–ª–∞."""
#     global attempts_counter
#
#     # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —á–∞—Ç–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
#     if chat_id not in attempts_counter:
#         attempts_counter[chat_id] = {}
#
#     # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#     user_attempts = attempts_counter[chat_id].get(attacker.id, 0) + 1
#     attempts_counter[chat_id][attacker.id] = user_attempts
#
#     if user_attempts >= 3:
#         # –¢—Ä–µ—Ç—å—è –ø–æ–ø—ã—Ç–∫–∞ ‚Äî –≤—ã–≤–æ–¥–∏–º –¥–æ—Ö–æ–¥—á–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
#         message_text = NO_POINTS_THIRD_ATTEMPT_MESSAGE.format(
#             username=attacker.username, points=points, cost=cost
#         )
#         await bot.send_message(chat_id, message_text)
#         attempts_counter[chat_id][attacker.id] = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
#         logger.info(
#             f"@{attacker.username} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫ –±–µ–∑ –æ—á–∫–æ–≤ –≤ —á–∞—Ç–µ {chat_id}"
#         )
#     else:
#         # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ—Ö–≤–∞—Ç–∫–µ –æ—á–∫–æ–≤
#         messages = NO_POINTS_RANDOM_MESSAGES if is_random else NO_POINTS_MESSAGES
#         message_text = random.choice(messages).format(
#             username=attacker.username, points=points, cost=cost
#         )
#         await bot.send_message(chat_id, message_text)
#         logger.info(
#             f"@{attacker.username} –ø—ã—Ç–∞–ª—Å—è –±—Ä–æ—Å–∏—Ç—å —Å–æ—Å–∏—Å–∫—É –±–µ–∑ –æ—á–∫–æ–≤ ({points}/{cost}), –ø–æ–ø—ã—Ç–∫–∞ {user_attempts}"
#         )
#
#
# async def process_sausage_throw(bot: Bot, chat_id: int, attacker, target_username: str):
#     """–û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –±—Ä–æ—Å–∫–∞ —Å–æ—Å–∏—Å–∫–∏ –¥–ª—è –æ–±–µ–∏—Ö –∫–æ–º–∞–Ω–¥."""
#     global attempts_counter
#
#     SAUSAGE_THROW_COST = (
#         await get_game_setting("sausage_throw_cost") or 2
#     )  # –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 2
#     SAUSAGE_HIT_DAMAGE = await get_game_setting("sausage_hit_damage") or 3
#     SAUSAGE_PENALTY = await get_game_setting("sausage_penalty") or 3
#     SAUSAGE_BONUS = await get_game_setting("sausage_bonus") or 3
#     MISS_CHANCE = await get_game_setting("miss_chance") or 10
#
#     attacker_data = await get_user_by_id(attacker.id, chat_id)
#     if not attacker_data or not attacker_data.in_game:
#         await bot.send_message(
#             chat_id, "–¢—ã –Ω–µ –≤ –∏–≥—Ä–µ! –°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç—É–ø–∏ –≤ —á–∞—Ç –∏ —Å—Ç–∞–Ω—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º."
#         )
#         return
#
#     target_data = await get_user_by_username(chat_id, target_username)
#     if not target_data or not target_data.username:
#         await bot.send_message(
#             chat_id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ @{target_username} —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º!"
#         )
#         return
#
#     try:
#         chat_member = await bot.get_chat_member(chat_id, target_data.telegram_id)
#         if chat_member.status in ["left", "kicked"]:
#             message_text = random.choice(NOT_IN_CHAT_MESSAGES).format(
#                 attacker=attacker.username, target=target_data.username
#             )
#             await bot.send_message(chat_id, message_text)
#             return
#     except Exception as e:
#         await bot.send_message(
#             chat_id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å @{target_username} –≤ —á–∞—Ç–µ!"
#         )
#         logger.error(
#             f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ @{target_username} –≤ —á–∞—Ç–µ {chat_id}: {e}"
#         )
#         return
#
#     if not target_data.in_game:
#         await bot.send_message(
#             chat_id, f"@{target_username} –Ω–µ –≤ –∏–≥—Ä–µ, –Ω–µ–ª—å–∑—è –∫–∏–Ω—É—Ç—å —Å–æ—Å–∏—Å–∫—É!"
#         )
#         return
#
#     # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –±—Ä–æ—Å–∫–µ
#     throw_message = random.choice(THROW_MESSAGES).format(
#         attacker=attacker.username, target=target_data.username
#     )
#     await bot.send_message(chat_id, throw_message)
#     await asyncio.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞
#
#     # –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–ª—ã –∞—Ç–∞–∫—É—é—â–µ–≥–æ –∑–∞ –±—Ä–æ—Å–æ–∫
#     attacker_points = await get_user_points(attacker.id, chat_id)
#     new_attacker_points = attacker_points - SAUSAGE_THROW_COST
#     await update_user_points(attacker.id, chat_id, -SAUSAGE_THROW_COST)
#
#     # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫, —Ç–∞–∫ –∫–∞–∫ –±—Ä–æ—Å–æ–∫ —É—Å–ø–µ—à–µ–Ω
#     if chat_id in attempts_counter and attacker.id in attempts_counter[chat_id]:
#         attempts_counter[chat_id][attacker.id] = 0
#
#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±–Ω—É–ª–∏–ª–∏—Å—å –ª–∏ –±–∞–ª–ª—ã –∞—Ç–∞–∫—É—é—â–µ–≥–æ –ø–æ—Å–ª–µ –±—Ä–æ—Å–∫–∞
#     if new_attacker_points == 0:
#         await reset_user_on_zero_points(attacker.id, chat_id)
#         message_text = random.choice(ZERO_POINTS_MESSAGES).format(
#             username=attacker.username
#         )
#         await bot.send_message(chat_id, message_text)
#         return
#
#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø—Ä–æ–º–∞—Ö–∞
#     if random.randint(1, 100) <= MISS_CHANCE:
#         message_text = random.choice(MISS_MESSAGES).format(
#             attacker=attacker.username, target=target_data.username
#         )
#         await bot.send_message(chat_id, message_text)
#         # –ï—Å–ª–∏ –ø–æ—Å–ª–µ –ø—Ä–æ–º–∞—Ö–∞ –æ—á–∫–æ–≤ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å, —É–≤–µ–¥–æ–º–ª—è–µ–º
#         if new_attacker_points < SAUSAGE_THROW_COST:
#             no_points_message = random.choice(NO_POINTS_AFTER_THROW_MESSAGES).format(
#                 username=attacker.username,
#                 points=new_attacker_points,
#                 cost=SAUSAGE_THROW_COST,
#             )
#             await bot.send_message(chat_id, no_points_message)
#         return
#
#     # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–ª—ã –∏ –±—É–ª–æ—á–∫–∏ –∂–µ—Ä—Ç–≤—ã
#     target_points = await get_user_points(target_data.telegram_id, chat_id)
#     target_buns = await get_user_buns_stats(target_data.telegram_id, chat_id)
#
#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∂–µ—Ä—Ç–≤—ã –±—É–ª–æ—á–∫–∞ —Å —á–∞—Å—Ç–∏—á–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º "—Å–æ—Å–∏—Å–∫–∞"
#     has_sausage = any("—Å–æ—Å–∏—Å–∫–∞" in bun["bun"].lower() for bun in target_buns)
#
#     # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ø–∞–¥–∞–Ω–∏–µ
#     if target_points > 0:
#         if has_sausage:
#             new_target_points = target_points + SAUSAGE_BONUS
#             await update_user_points(target_data.telegram_id, chat_id, SAUSAGE_BONUS)
#             message_text = random.choice(SAUSAGE_BONUS_MESSAGES).format(
#                 attacker=attacker.username,
#                 target=target_data.username,
#                 bonus=SAUSAGE_BONUS,
#                 new_points=new_target_points,
#             )
#             await bot.send_message(chat_id, message_text)
#             await bot.send_message(chat_id, HOTDOG_EMOJI)
#         else:
#             new_target_points = max(0, target_points - SAUSAGE_HIT_DAMAGE)
#             await update_user_points(
#                 target_data.telegram_id, chat_id, -SAUSAGE_HIT_DAMAGE
#             )
#             message_text = random.choice(HIT_MESSAGES).format(
#                 attacker=attacker.username,
#                 target=target_data.username,
#                 old_points=target_points,
#                 new_points=new_target_points,
#             )
#             await bot.send_message(chat_id, message_text)
#             await bot.send_message(chat_id, HIT_EMOJI)
#
#             # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±–Ω—É–ª–∏–ª–∏—Å—å –ª–∏ –±–∞–ª–ª—ã –∂–µ—Ä—Ç–≤—ã
#             if new_target_points == 0:
#                 await reset_user_on_zero_points(target_data.telegram_id, chat_id)
#                 message_text = random.choice(ZERO_POINTS_MESSAGES).format(
#                     username=target_data.username
#                 )
#                 await bot.send_message(chat_id, message_text)
#         # –ï—Å–ª–∏ –ø–æ—Å–ª–µ –ø–æ–ø–∞–¥–∞–Ω–∏—è —É –∞—Ç–∞–∫—É—é—â–µ–≥–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –æ—á–∫–æ–≤ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –±—Ä–æ—Å–æ–∫
#         if new_attacker_points < SAUSAGE_THROW_COST:
#             no_points_message = random.choice(NO_POINTS_AFTER_THROW_MESSAGES).format(
#                 username=attacker.username,
#                 points=new_attacker_points,
#                 cost=SAUSAGE_THROW_COST,
#             )
#             await bot.send_message(chat_id, no_points_message)
#     else:
#         new_attacker_points = max(0, new_attacker_points - SAUSAGE_PENALTY)
#         await update_user_points(attacker.id, chat_id, -SAUSAGE_PENALTY)
#         message_text = random.choice(PENALTY_MESSAGES).format(
#             attacker=attacker.username,
#             target=target_data.username,
#             penalty=SAUSAGE_PENALTY,
#             new_points=new_attacker_points,
#         )
#         await bot.send_message(chat_id, message_text)
#         await bot.send_message(chat_id, PENALTY_EMOJI)
#
#         # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±–Ω—É–ª–∏–ª–∏—Å—å –ª–∏ –±–∞–ª–ª—ã –∞—Ç–∞–∫—É—é—â–µ–≥–æ –ø–æ—Å–ª–µ —à—Ç—Ä–∞—Ñ–∞
#         if new_attacker_points == 0:
#             await reset_user_on_zero_points(attacker.id, chat_id)
#             message_text = random.choice(ZERO_POINTS_MESSAGES).format(
#                 username=attacker.username
#             )
#             await bot.send_message(chat_id, message_text)
from aiogram import Bot, Router
from aiogram.types import Message
from aiogram.filters import Command
from database.queries import (
    get_user_by_id,
    get_user_points,
    update_user_points,
    get_user_by_username,
    get_user_buns_stats,
    get_random_user,
    get_game_setting,
    reset_user_on_zero_points,
)
from logger import logger
import random
import asyncio

sausage_game_r = Router()

# –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
HOTDOG_EMOJI = "üå≠"  # –ë–æ–Ω—É—Å –∑–∞ —Å–æ—Å–∏—Å–∫—É
HIT_EMOJI = "üí•"  # –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ
PENALTY_EMOJI = "üò¢"  # –®—Ç—Ä–∞—Ñ –∑–∞ –∞—Ç–∞–∫—É –±–µ–∑–æ—Ä—É–∂–Ω–æ–≥–æ

# –°—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫ –±—Ä–æ—Å–∫–∞ –±–µ–∑ –æ—á–∫–æ–≤: {chat_id: {user_id: int}}
attempts_counter = {}

# –Æ–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—Ä–∞–∑—ã
NO_POINTS_MESSAGES = [
    "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å–æ—Å–∏—Å–æ—á–Ω—ã—Ö –±–∞–ª–ª–æ–≤ ({points}/{cost})! –ò–¥–∏ –∏—Å–ø–µ–∫–∏ –±—É–ª–æ—á–∫—É!",
    "–°–æ—Å–∏—Å–∫–∏ –Ω–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ, @{username}! –£ —Ç–µ–±—è —Ç–æ–ª—å–∫–æ {points}/{cost} –±–∞–ª–ª–æ–≤.",
    "–¢–≤–æ–∏ –∫–∞—Ä–º–∞–Ω—ã –ø—É—Å—Ç—ã, @{username}! {points}/{cost} ‚Äî —ç—Ç–æ –Ω–µ —Å–æ—Å–∏—Å–æ—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å.",
    "–ë–µ–∑ –±–∞–ª–ª–æ–≤ —Å–æ—Å–∏—Å–∫—É –Ω–µ –∫–∏–Ω–µ—à—å, @{username}! ({points}/{cost})",
]

NO_POINTS_RANDOM_MESSAGES = [
    "@{username} –ø–æ–ø—ã—Ç–∞–ª—Å—è —à–≤—ã—Ä–Ω—É—Ç—å —Å–ª—É—á–∞–π–Ω—É—é —Å–æ—Å–∏—Å–∫—É, –Ω–æ –±–∞–ª–ª–æ–≤ –Ω–µ—Ç ({points}/{cost})!",
    "–°–æ—Å–∏—Å–∫–∞ –æ—Å—Ç–∞–ª–∞—Å—å –≤ –∫–∞—Ä–º–∞–Ω–µ —É @{username} ‚Äî –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–ª–ª–æ–≤ ({points}/{cost})!",
    "@{username} —Ö–æ—Ç–µ–ª –∫–∏–Ω—É—Ç—å —Å–æ—Å–∏—Å–∫—É –Ω–∞—É–≥–∞–¥, –Ω–æ –ø—É—Å—Ç—ã–µ –∫–∞—Ä–º–∞–Ω—ã —Å–∫–∞–∑–∞–ª–∏ '–Ω–µ—Ç' ({points}/{cost})!",
    "–†–∞–Ω–¥–æ–º–Ω–∞—è —Å–æ—Å–∏—Å–∫–∞? –ù–µ —Å–µ–≥–æ–¥–Ω—è, @{username}! –ë–∞–ª–ª–æ–≤ –º–∞–ª–æ ({points}/{cost}).",
]

NO_POINTS_THIRD_ATTEMPT_MESSAGE = (
    "–≠–π, @{username}, —Ö–≤–∞—Ç–∏—Ç –ø—ã—Ç–∞—Ç—å—Å—è! –£ —Ç–µ–±—è {points} –±–∞–ª–ª–æ–≤, –∞ –Ω—É–∂–Ω–æ {cost}, —á—Ç–æ–±—ã –∫–∏–Ω—É—Ç—å —Å–æ—Å–∏—Å–∫—É. "
    "–ü–æ–∫–∞ –Ω–µ –Ω–∞–±–µ—Ä–µ—à—å –±–∞–ª–ª—ã, –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–π–¥–µ—Ç! –ò–¥–∏ –∑–∞ –±—É–ª–æ—á–∫–∞–º–∏! üå≠"
)

NO_POINTS_AFTER_THROW_MESSAGES = [
    "–ë–∞–ª–ª—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, @{username}! –£ —Ç–µ–±—è —Ç–µ–ø–µ—Ä—å {points}/{cost} ‚Äî –ø–æ—Ä–∞ –∑–∞ –±—É–ª–æ—á–∫–∞–º–∏!",
    "–°–æ—Å–∏—Å–∫–∞ —É–ª–µ—Ç–µ–ª–∞, –∞ —Å –Ω–µ–π –∏ —Ç–≤–æ–∏ –±–∞–ª–ª—ã, @{username}! –û—Å—Ç–∞–ª–æ—Å—å {points}/{cost}.",
    "@{username}, —Ç—ã –≤ –Ω—É–ª–µ ({points}/{cost})! –ë—É–ª–∫–∏ –∑–æ–≤—É—Ç!",
    "–ë—Ä–æ—Å–æ–∫ –±—ã–ª, –Ω–æ –±–∞–ª–ª—ã —Ä–∞—Å—Ç–∞—è–ª–∏, @{username}! ({points}/{cost})",
]

THROW_MESSAGES = [
    "üå≠üí® @{attacker} —à–≤—ã—Ä—è–µ—Ç —Å–æ—Å–∏—Å–∫—É –≤ @{target}! –õ–µ—Ç–∏—Ç...",
    "üå≠üí® @{attacker} –º–µ—Ç–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ @{target}! –°–º–æ—Ç—Ä–∏–º...",
    "üå≠üí® –°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} —É—Å—Ç—Ä–µ–º–∏–ª–∞—Å—å –∫ @{target}! –ß—Ç–æ –±—É–¥–µ—Ç?",
    "üå≠üí® @{attacker} –∑–∞—Ä—è–¥–∏–ª —Å–æ—Å–∏—Å–∫—É –≤ —Å—Ç–æ—Ä–æ–Ω—É @{target}! –ñ–¥–µ–º...",
    "üå≠üí® @{attacker} –±—Ä–æ—Å–∏–ª —Å–æ—Å–∏—Å–∫—É –≤ @{target}! –í –ø–æ–ª–µ—Ç–µ...",
]

HIT_MESSAGES = [
    "@{attacker} –º–µ—Ç–∫–æ –ø–æ–ø–∞–ª —Å–æ—Å–∏—Å–∫–æ–π –≤ @{target}! –£ @{target} –±—ã–ª–æ {old_points}, —Å—Ç–∞–ª–æ {new_points}.",
    "@{attacker} –∑–∞—Ä—è–¥–∏–ª —Å–æ—Å–∏—Å–∫–æ–π –ø—Ä—è–º–æ –≤ @{target}! –¢–µ–ø–µ—Ä—å —É –∂–µ—Ä—Ç–≤—ã {new_points} –≤–º–µ—Å—Ç–æ {old_points}.",
    "–ë–∞–º! @{attacker} —É–≥–æ–¥–∏–ª —Å–æ—Å–∏—Å–∫–æ–π –≤ @{target}! –ë–∞–ª–ª—ã —É–ø–∞–ª–∏ —Å {old_points} –¥–æ {new_points}.",
    "@{attacker} —É—Å—Ç—Ä–æ–∏–ª —Å–æ—Å–∏—Å–æ—á–Ω—ã–π —Å—é—Ä–ø—Ä–∏–∑ –¥–ª—è @{target}! –û—Å—Ç–∞–ª–æ—Å—å {new_points} –±–∞–ª–ª–æ–≤ –≤–º–µ—Å—Ç–æ {old_points}.",
    "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} –ø—Ä–∏–ª–µ—Ç–µ–ª–∞ –≤ @{target}! –ë–∞–ª–ª—ã —Ç–∞—é—Ç: {old_points} ‚Üí {new_points}.",
]

PENALTY_MESSAGES = [
    "@{attacker} –∫–∏–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ @{target}, –Ω–æ —Ç–æ—Ç –±—ã–ª –±–µ–∑–æ—Ä—É–∂–µ–Ω! –†–∞—Å–ø–ª–∞—Ç–∞: –º–∏–Ω—É—Å {penalty} –±–∞–ª–ª–æ–≤, –æ—Å—Ç–∞–ª–æ—Å—å {new_points}.",
    "@{attacker} –∑—Ä—è —à–≤—ã—Ä–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ –ø—É—Å—Ç—ã–µ –∫–∞—Ä–º–∞–Ω—ã @{target}! –®—Ç—Ä–∞—Ñ {penalty}, —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è {new_points} –±–∞–ª–ª–æ–≤.",
    "–û–π-–æ–π, @{attacker}! @{target} –æ–∫–∞–∑–∞–ª—Å—è –±–µ–∑ –±–∞–ª–ª–æ–≤, –∏ —Å–æ—Å–∏—Å–∫–∞ –≤–µ—Ä–Ω—É–ª–∞—Å—å –±—É–º–µ—Ä–∞–Ω–≥–æ–º: -{penalty}, –æ—Å—Ç–∞–ª–æ—Å—å {new_points}.",
    "@{attacker} –ø–æ–ø–∞–ª —Å–æ—Å–∏—Å–∫–æ–π –≤ @{target}, –Ω–æ –±–µ–∑ —Ç–æ–ª–∫—É! –®—Ç—Ä–∞—Ñ –∑–∞ –ø–æ–¥–ª–æ—Å—Ç—å: -{penalty}, –∏—Ç–æ–≥–æ {new_points}.",
    "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} —É–≥–æ–¥–∏–ª–∞ –≤ @{target}, –Ω–æ –±–µ–∑ —Ç–æ–ª–∫—É! @{attacker} —Ç–µ—Ä—è–µ—Ç {penalty}, —Ç–µ–ø–µ—Ä—å {new_points} –±–∞–ª–ª–æ–≤.",
]

NOT_IN_CHAT_MESSAGES = [
    "–°–æ—Å–∏—Å–∫–∞ —É–ª–µ—Ç–µ–ª–∞ –≤ –ø—É—Å—Ç–æ—Ç—É, @{target} –¥–∞–≤–Ω–æ —Å–±–µ–∂–∞–ª!",
    "@{target} –≥–¥–µ-—Ç–æ —Å–ø—Ä—è—Ç–∞–ª—Å—è, –∏ —Ç–≤–æ—è —Å–æ—Å–∏—Å–∫–∞ –ø—Ä–æ–ø–∞–ª–∞ –∑—Ä—è, @{attacker}!",
    "–ö—É–¥–∞ –∫–∏–Ω—É–ª, @{attacker}? @{target} —É–∂–µ –Ω–µ –≤ —á–∞—Ç–µ, —Å–æ—Å–∏—Å–∫–∞ –ø–æ—Ç–µ—Ä—è–ª–∞—Å—å!",
    "@{attacker} —à–≤—ã—Ä–Ω—É–ª —Å–æ—Å–∏—Å–∫—É, –Ω–æ @{target} –∏—Å–ø–∞—Ä–∏–ª—Å—è –∏–∑ —á–∞—Ç–∞!",
    "–°–æ—Å–∏—Å–∫–∞ –Ω–µ –¥–æ–ª–µ—Ç–µ–ª–∞ ‚Äî @{target} —Å–±–µ–∂–∞–ª –æ—Ç –±—É–ª–æ—á–Ω–æ–π –±–∏—Ç–≤—ã!",
]

SAUSAGE_BONUS_MESSAGES = [
    "@{attacker} –∫–∏–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ @{target}, –Ω–æ —É —Ç–æ–≥–æ —É–∂–µ –±—ã–ª–∞ —Å–æ—Å–∏—Å–∫–∞ –≤ —Ç–µ—Å—Ç–µ! –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ: +{bonus} –±–∞–ª–ª–æ–≤, —Ç–µ–ø–µ—Ä—å {new_points}!",
    "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} –ø–æ–ø–∞–ª–∞ –≤ @{target}, –∏ —Ç–æ—Ç –æ–±—Ä–∞–¥–æ–≤–∞–ª—Å—è ‚Äî –æ–Ω —Å–æ—Å–∏—Å–æ—á–Ω—ã–π –º–∞—Å—Ç–µ—Ä! +{bonus}, –∏—Ç–æ–≥–æ {new_points}.",
    "@{target} –ø–æ–π–º–∞–ª —Å–æ—Å–∏—Å–∫—É –æ—Ç @{attacker} –∏ –≤—Å–ø–æ–º–Ω–∏–ª —Å–≤–æ–∏ —Å–æ—Å–∏—Å–æ—á–Ω—ã–µ –∫–æ—Ä–Ω–∏! –ë–æ–Ω—É—Å: +{bonus}, —Å—Ç–∞–ª–æ {new_points}.",
    "@{attacker}, —Ç–≤–æ—è —Å–æ—Å–∏—Å–∫–∞ —Å–¥–µ–ª–∞–ª–∞ @{target} —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ! –û–Ω –ø–æ–ª—É—á–∞–µ—Ç +{bonus} –±–∞–ª–ª–æ–≤, —Ç–µ–ø–µ—Ä—å {new_points}.",
    "–ë—É–º! @{attacker} –ø–æ–ø–∞–ª –≤ @{target}, –Ω–æ —Å–æ—Å–∏—Å–∫–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å –Ω–∞ –µ–≥–æ —Å—Ç–æ—Ä–æ–Ω–µ! +{bonus}, –∏—Ç–æ–≥–æ {new_points}.",
]

RANDOM_Sausage_MESSAGES = [
    "@{attacker} —à–≤—ã—Ä–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –Ω–∞—É–≥–∞–¥ –∏ —Ü–µ–ª–∏—Ç—Å—è –≤ @{target}!",
    "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} —É–ª–µ—Ç–µ–ª–∞ –≤ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–µ–≥–æ ‚Äî @{target}!",
    "@{attacker} —Ä–µ—à–∏–ª —Å—ã–≥—Ä–∞—Ç—å –≤ —Å–æ—Å–∏—Å–æ—á–Ω—É—é —Ä—É–ª–µ—Ç–∫—É ‚Äî @{target} –ø–æ–¥ –ø—Ä–∏—Ü–µ–ª–æ–º!",
    "–°–ª—É—á–∞–π–Ω—ã–π –±—Ä–æ—Å–æ–∫ –æ—Ç @{attacker}, –∏ @{target} —Å—Ç–∞–ª –º–∏—à–µ–Ω—å—é!",
    "@{attacker} –∫–∏–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ —Ç–æ–ª–ø—É, –∞ –ø–æ–ø–∞–ª –≤ @{target}!",
]

MISS_MESSAGES = [
    "@{attacker} –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è! –°–æ—Å–∏—Å–∫–∞ —É–ª–µ—Ç–µ–ª–∞ –≤ –∑–∞–∫–∞—Ç.",
    "–û–π! @{attacker} –Ω–µ –ø–æ–ø–∞–ª –≤ @{target}, –æ–Ω–∞ –ø—Ä–æ–ª–µ—Ç–µ–ª–∞ –º–∏–º–æ!",
    "@{attacker} –º–µ—Ç–∏–ª –≤ @{target}, –Ω–æ —Å–æ—Å–∏—Å–∫–∞ —Ä–µ—à–∏–ª–∞ —É–π—Ç–∏ –≤ —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ–ª—ë—Ç!",
    "–ü—Ä–æ–º–∞—Ö! @{attacker} –Ω–µ —É–≥–æ–¥–∏–ª –≤ @{target}, —Å–æ—Å–∏—Å–∫–∞ –ø—Ä–æ–ø–∞–ª–∞ –∑—Ä—è.",
    "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{attacker} –Ω–µ –¥–æ–ª–µ—Ç–µ–ª–∞ –¥–æ @{target} ‚Äî —Ç–æ—á–Ω–æ—Å—Ç—å –ø–æ–¥–∫–∞—á–∞–ª–∞!",
]

SELF_HIT_MESSAGES = [
    "–°–æ—Å–∏—Å–∫–∞ —á—É—Ç—å –Ω–µ –ø–æ–ø–∞–ª–∞ –≤ —Ç–µ–±—è —Å–∞–º–æ–≥–æ, @{username}, –Ω–æ —Ç—ã —É–≤–µ—Ä–Ω—É–ª—Å—è!",
    "@{username} —à–≤—ã—Ä–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –∏ —á—É—Ç—å –Ω–µ —Å—Ç–∞–ª –∂–µ—Ä—Ç–≤–æ–π —Å–∞–º ‚Äî –ª–æ–≤–∫–æ—Å—Ç—å —Å–ø–∞—Å–ª–∞!",
    "–û–π-–æ–π, @{username}! –°–æ—Å–∏—Å–∫–∞ —Å–¥–µ–ª–∞–ª–∞ –∫—Ä—É–≥ –∏ —á—É—Ç—å –Ω–µ –≤–µ—Ä–Ω—É–ª–∞—Å—å –∫ —Ç–µ–±–µ!",
    "@{username} –º–µ—Ç–Ω—É–ª —Å–æ—Å–∏—Å–∫—É –≤ –≤–æ–∑–¥—É—Ö, –Ω–æ –æ–Ω–∞ —Ä–µ—à–∏–ª–∞ –ø–æ–∏–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ –¥–æ–≥–æ–Ω—è–ª–∫–∏!",
    "–°–æ—Å–∏—Å–∫–∞ –æ—Ç @{username} —á—É—Ç—å –Ω–µ —É—Å—Ç—Ä–æ–∏–ª–∞ –∞–≤—Ç–æ–≥–æ–ª, –Ω–æ —Ç—ã –≤–æ–≤—Ä–µ–º—è –æ—Ç–ø—Ä—ã–≥–Ω—É–ª!",
    "@{username}, —Ç—ã —á—É—Ç—å –Ω–µ —É–≥–æ—Å—Ç–∏–ª —Å–µ–±—è —Å–æ—Å–∏—Å–∫–æ–π ‚Äî –∞–∫–∫—É—Ä–∞—Ç–Ω–µ–µ —Å —Ä–∞–Ω–¥–æ–º–æ–º!",
]

ZERO_POINTS_MESSAGES = [
    "@{username} –æ—Å—Ç–∞–ª—Å—è –±–µ–∑ –±–∞–ª–ª–æ–≤ –∏ –≤—ã–ª–µ—Ç–µ–ª –∏–∑ –≥–æ–Ω–∫–∏! –í—Å–µ –±—É–ª–∫–∏ —Ä–∞—Å—Ç–∞—è–ª–∏.",
    "–ë–∞–ª–ª—ã @{username} –æ–±–Ω—É–ª–∏–ª–∏—Å—å ‚Äî –ø—Ä–æ—â–∞–π, —Å–æ—Å–∏—Å–æ—á–Ω–∞—è —Å–ª–∞–≤–∞ –∏ –±—É–ª–∫–∏!",
    "@{username} –¥–æ—Å—Ç–∏–≥ –¥–Ω–∞: 0 –±–∞–ª–ª–æ–≤, 0 –±—É–ª–æ–∫, 0 —à–∞–Ω—Å–æ–≤!",
    "–°–æ—Å–∏—Å–æ—á–Ω–∞—è –∫–∞—Ä—å–µ—Ä–∞ @{username} —Ä—É—Ö–Ω—É–ª–∞ ‚Äî 0 –±–∞–ª–ª–æ–≤, –±—É–ª–∫–∏ –∫–æ–Ω—Ñ–∏—Å–∫–æ–≤–∞–Ω—ã!",
    "@{username} —Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –±–∞–Ω–∫—Ä–æ—Ç –±—É–ª–æ—á–Ω–æ–π –≤–æ–π–Ω—ã ‚Äî –Ω–∏ –±–∞–ª–ª–æ–≤, –Ω–∏ –±—É–ª–æ–∫!",
]

NO_USERNAME_MESSAGES = [
    "–£ @{old_target} –Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞, –∫–∏–¥–∞–µ–º –≤ @{new_target}!",
    "@{old_target} —Å–∫—Ä—ã–ª —Å–≤–æ–π —é–∑–µ—Ä–Ω–µ–π–º, –ø–æ–ø–∞–ª –ø–æ–¥ —Ä–∞–∑–¥–∞—á—É @{new_target}!",
    "–ë–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞ —É @{old_target}? –õ–æ–≤–∏, @{new_target}!",
    "@{old_target} –æ–∫–∞–∑–∞–ª—Å—è –±–µ–∑—ã–º—è–Ω–Ω—ã–º, —Å–æ—Å–∏—Å–∫–∞ —É–ª–µ—Ç–µ–ª–∞ –∫ @{new_target}!",
]


@sausage_game_r.message(Command("sausage", "—Å–æ—Å–∏—Å–∫–∞"))
async def sausage_throw_handler(message: Message, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /sausage –∏–ª–∏ /—Å–æ—Å–∏—Å–∫–∞ @username: –∫–∏–¥–∞–µ–º —Å–æ—Å–∏—Å–∫—É –≤ –¥—Ä—É–≥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —é–º–æ—Ä–æ–º."""
    if message.chat.type == "private":
        await message.reply(
            "–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö! üå≠"
        )
        return

    chat_id = message.chat.id
    attacker = message.from_user

    if not message.text.split(maxsplit=1)[1:]:
        await message.reply(
            "–£–∫–∞–∂–∏, –≤ –∫–æ–≥–æ –∫–∏–Ω—É—Ç—å —Å–æ—Å–∏—Å–∫—É! –ü—Ä–∏–º–µ—Ä: /sausage @username –∏–ª–∏ /—Å–æ—Å–∏—Å–∫–∞ @username"
        )
        return

    target_username = message.text.split(maxsplit=1)[1].strip()
    if not target_username.startswith("@"):
        await message.reply(
            "–Æ–∑–µ—Ä–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å @! –ü—Ä–∏–º–µ—Ä: /sausage @username –∏–ª–∏ /—Å–æ—Å–∏—Å–∫–∞ @username"
        )
        return
    target_username = target_username[1:]

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–∫–æ–≤ –ø–µ—Ä–µ–¥ –±—Ä–æ—Å–∫–æ–º
    SAUSAGE_THROW_COST = (
        await get_game_setting("sausage_throw_cost") or 2
    )  # –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 2
    attacker_points = await get_user_points(attacker.id, chat_id)
    if attacker_points < SAUSAGE_THROW_COST:
        await handle_no_points(
            bot, chat_id, attacker, attacker_points, SAUSAGE_THROW_COST
        )
        return

    target_data = await get_user_by_username(chat_id, target_username)
    if not target_data or not target_data.username:
        old_target = target_username
        target_data = await get_random_user(chat_id)
        if not target_data or not target_data.username:
            await message.reply("–í —á–∞—Ç–µ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —é–∑–µ—Ä–Ω–µ–π–º–∞–º–∏ –¥–ª—è –∞—Ç–∞–∫–∏! üå≠")
            return
        if target_data.telegram_id == attacker.id:
            target_data = await get_random_user(chat_id)
            if (
                not target_data
                or not target_data.username
                or target_data.telegram_id == attacker.id
            ):
                await message.reply(
                    "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∂–µ—Ä—Ç–≤—É —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º! üå≠"
                )
                return
        message_text = random.choice(NO_USERNAME_MESSAGES).format(
            old_target=old_target, new_target=target_data.username
        )
        await message.reply(message_text)

    await process_sausage_throw(bot, chat_id, attacker, target_data.username)


@sausage_game_r.message(Command("random_sausage", "—Å–ª—É—á–∞–π–Ω–∞—è—Å–æ—Å–∏—Å–∫–∞"))
async def random_sausage_throw_handler(message: Message, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /random_sausage: –∫–∏–¥–∞–µ–º —Å–æ—Å–∏—Å–∫—É –≤ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–≥—Ä—ã."""
    if message.chat.type == "private":
        await message.reply(
            "–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö! üå≠"
        )
        return

    chat_id = message.chat.id
    attacker = message.from_user

    attacker_data = await get_user_by_id(attacker.id, chat_id)
    if not attacker_data or not attacker_data.in_game:
        await message.reply("–¢—ã –Ω–µ –≤ –∏–≥—Ä–µ! –°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç—É–ø–∏ –≤ —á–∞—Ç –∏ —Å—Ç–∞–Ω—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º.")
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–∫–æ–≤ –ø–µ—Ä–µ–¥ –±—Ä–æ—Å–∫–æ–º
    SAUSAGE_THROW_COST = (
        await get_game_setting("sausage_throw_cost") or 2
    )  # –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 2
    attacker_points = await get_user_points(attacker.id, chat_id)
    if attacker_points < SAUSAGE_THROW_COST:
        await handle_no_points(
            bot, chat_id, attacker, attacker_points, SAUSAGE_THROW_COST, is_random=True
        )
        return

    target_data = await get_random_user(chat_id)
    if not target_data:
        await message.reply("–í —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —Å–æ—Å–∏—Å–æ—á–Ω–æ–π –∞—Ç–∞–∫–∏!")
        return

    if not target_data.username or target_data.telegram_id == attacker.id:
        old_target = target_data.username or "–∫–æ–≥–æ-—Ç–æ –±–µ–∑ —é–∑–µ—Ä–Ω–µ–π–º–∞"
        target_data = await get_random_user(chat_id)
        if (
            not target_data
            or not target_data.username
            or target_data.telegram_id == attacker.id
        ):
            await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∂–µ—Ä—Ç–≤—É —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º! üå≠")
            return
        message_text = random.choice(NO_USERNAME_MESSAGES).format(
            old_target=old_target, new_target=target_data.username
        )
        await message.reply(message_text)

    await process_sausage_throw(bot, chat_id, attacker, target_data.username)


async def handle_no_points(
    bot: Bot, chat_id: int, attacker, points: int, cost: int, is_random: bool = False
):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Ç—É–∞—Ü–∏–∏, –∫–æ–≥–¥–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤ –¥–ª—è –±—Ä–æ—Å–∫–∞ –¥–æ –Ω–∞—á–∞–ª–∞."""
    global attempts_counter

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è —á–∞—Ç–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if chat_id not in attempts_counter:
        attempts_counter[chat_id] = {}

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_attempts = attempts_counter[chat_id].get(attacker.id, 0) + 1
    attempts_counter[chat_id][attacker.id] = user_attempts

    if user_attempts >= 3:
        # –¢—Ä–µ—Ç—å—è –ø–æ–ø—ã—Ç–∫–∞ ‚Äî –≤—ã–≤–æ–¥–∏–º –¥–æ—Ö–æ–¥—á–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        message_text = NO_POINTS_THIRD_ATTEMPT_MESSAGE.format(
            username=attacker.username, points=points, cost=cost
        )
        await bot.send_message(chat_id, message_text)
        attempts_counter[chat_id][attacker.id] = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        logger.info(
            f"@{attacker.username} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫ –±–µ–∑ –æ—á–∫–æ–≤ –≤ —á–∞—Ç–µ {chat_id}"
        )
    else:
        # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ—Ö–≤–∞—Ç–∫–µ –æ—á–∫–æ–≤
        messages = NO_POINTS_RANDOM_MESSAGES if is_random else NO_POINTS_MESSAGES
        message_text = random.choice(messages).format(
            username=attacker.username, points=points, cost=cost
        )
        await bot.send_message(chat_id, message_text)
        logger.info(
            f"@{attacker.username} –ø—ã—Ç–∞–ª—Å—è –±—Ä–æ—Å–∏—Ç—å —Å–æ—Å–∏—Å–∫—É –±–µ–∑ –æ—á–∫–æ–≤ ({points}/{cost}), –ø–æ–ø—ã—Ç–∫–∞ {user_attempts}"
        )


async def process_sausage_throw(bot: Bot, chat_id: int, attacker, target_username: str):
    """–û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –±—Ä–æ—Å–∫–∞ —Å–æ—Å–∏—Å–∫–∏ –¥–ª—è –æ–±–µ–∏—Ö –∫–æ–º–∞–Ω–¥."""
    global attempts_counter

    SAUSAGE_THROW_COST = (
        await get_game_setting("sausage_throw_cost") or 2
    )  # –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 2
    SAUSAGE_HIT_DAMAGE = await get_game_setting("sausage_hit_damage") or 3
    SAUSAGE_PENALTY = await get_game_setting("sausage_penalty") or 3
    SAUSAGE_BONUS = await get_game_setting("sausage_bonus") or 3
    MISS_CHANCE = await get_game_setting("miss_chance") or 10

    attacker_data = await get_user_by_id(attacker.id, chat_id)
    if not attacker_data or not attacker_data.in_game:
        await bot.send_message(
            chat_id, "–¢—ã –Ω–µ –≤ –∏–≥—Ä–µ! –°–Ω–∞—á–∞–ª–∞ –≤—Å—Ç—É–ø–∏ –≤ —á–∞—Ç –∏ —Å—Ç–∞–Ω—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º."
        )
        return

    target_data = await get_user_by_username(chat_id, target_username)
    if not target_data or not target_data.username:
        await bot.send_message(
            chat_id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ @{target_username} —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º!"
        )
        return

    try:
        chat_member = await bot.get_chat_member(chat_id, target_data.telegram_id)
        if chat_member.status in ["left", "kicked"]:
            message_text = random.choice(NOT_IN_CHAT_MESSAGES).format(
                attacker=attacker.username, target=target_data.username
            )
            await bot.send_message(chat_id, message_text)
            return
    except Exception as e:
        await bot.send_message(
            chat_id, f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å @{target_username} –≤ —á–∞—Ç–µ!"
        )
        logger.error(
            f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ @{target_username} –≤ —á–∞—Ç–µ {chat_id}: {e}"
        )
        return

    if not target_data.in_game:
        await bot.send_message(
            chat_id, f"@{target_username} –Ω–µ –≤ –∏–≥—Ä–µ, –Ω–µ–ª—å–∑—è –∫–∏–Ω—É—Ç—å —Å–æ—Å–∏—Å–∫—É!"
        )
        return

    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –±—Ä–æ—Å–∫–µ
    throw_message = random.choice(THROW_MESSAGES).format(
        attacker=attacker.username, target=target_data.username
    )
    await bot.send_message(chat_id, throw_message)
    await asyncio.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞

    # –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–ª—ã –∞—Ç–∞–∫—É—é—â–µ–≥–æ –∑–∞ –±—Ä–æ—Å–æ–∫
    attacker_points = await get_user_points(attacker.id, chat_id)
    new_attacker_points = attacker_points - SAUSAGE_THROW_COST
    await update_user_points(attacker.id, chat_id, -SAUSAGE_THROW_COST)

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫, —Ç–∞–∫ –∫–∞–∫ –±—Ä–æ—Å–æ–∫ —É—Å–ø–µ—à–µ–Ω
    if chat_id in attempts_counter and attacker.id in attempts_counter[chat_id]:
        attempts_counter[chat_id][attacker.id] = 0

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø—Ä–æ–º–∞—Ö–∞
    if random.randint(1, 100) <= MISS_CHANCE:
        message_text = random.choice(MISS_MESSAGES).format(
            attacker=attacker.username, target=target_data.username
        )
        await bot.send_message(chat_id, message_text)
    else:
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–ª—ã –∏ –±—É–ª–æ—á–∫–∏ –∂–µ—Ä—Ç–≤—ã
        target_points = await get_user_points(target_data.telegram_id, chat_id)
        target_buns = await get_user_buns_stats(target_data.telegram_id, chat_id)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∂–µ—Ä—Ç–≤—ã –±—É–ª–æ—á–∫–∞ —Å —á–∞—Å—Ç–∏—á–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º "—Å–æ—Å–∏—Å–∫–∞"
        has_sausage = any("—Å–æ—Å–∏—Å–∫–∞" in bun["bun"].lower() for bun in target_buns)

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ø–∞–¥–∞–Ω–∏–µ
        if target_points > 0:
            if has_sausage:
                new_target_points = target_points + SAUSAGE_BONUS
                await update_user_points(
                    target_data.telegram_id, chat_id, SAUSAGE_BONUS
                )
                message_text = random.choice(SAUSAGE_BONUS_MESSAGES).format(
                    attacker=attacker.username,
                    target=target_data.username,
                    bonus=SAUSAGE_BONUS,
                    new_points=new_target_points,
                )
                await bot.send_message(chat_id, message_text)
                await bot.send_message(chat_id, HOTDOG_EMOJI)
            else:
                new_target_points = max(0, target_points - SAUSAGE_HIT_DAMAGE)
                await update_user_points(
                    target_data.telegram_id, chat_id, -SAUSAGE_HIT_DAMAGE
                )
                message_text = random.choice(HIT_MESSAGES).format(
                    attacker=attacker.username,
                    target=target_data.username,
                    old_points=target_points,
                    new_points=new_target_points,
                )
                await bot.send_message(chat_id, message_text)
                await bot.send_message(chat_id, HIT_EMOJI)

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±–Ω—É–ª–∏–ª–∏—Å—å –ª–∏ –±–∞–ª–ª—ã –∂–µ—Ä—Ç–≤—ã
                if new_target_points == 0:
                    await reset_user_on_zero_points(target_data.telegram_id, chat_id)
                    message_text = random.choice(ZERO_POINTS_MESSAGES).format(
                        username=target_data.username
                    )
                    await bot.send_message(chat_id, message_text)
        else:
            new_attacker_points = max(0, new_attacker_points - SAUSAGE_PENALTY)
            await update_user_points(attacker.id, chat_id, -SAUSAGE_PENALTY)
            message_text = random.choice(PENALTY_MESSAGES).format(
                attacker=attacker.username,
                target=target_data.username,
                penalty=SAUSAGE_PENALTY,
                new_points=new_attacker_points,
            )
            await bot.send_message(chat_id, message_text)
            await bot.send_message(chat_id, PENALTY_EMOJI)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–ª—ã –∞—Ç–∞–∫—É—é—â–µ–≥–æ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π
    if new_attacker_points == 0:
        await reset_user_on_zero_points(attacker.id, chat_id)
        message_text = random.choice(ZERO_POINTS_MESSAGES).format(
            username=attacker.username
        )
        await bot.send_message(chat_id, message_text)
    elif new_attacker_points < SAUSAGE_THROW_COST:
        no_points_message = random.choice(NO_POINTS_AFTER_THROW_MESSAGES).format(
            username=attacker.username,
            points=new_attacker_points,
            cost=SAUSAGE_THROW_COST,
        )
        await bot.send_message(chat_id, no_points_message)
