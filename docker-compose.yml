version: '3.8'

services:
  telegram-bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: telegram_bot
    volumes:
      - ./db.sqlite3:/app/db.sqlite3
      - ./logs:/app/logs
      - ./.env:/app/.env
    environment:
      - PYTHONPATH=/app
    depends_on:
      - api
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  api:
    build:
      context: .
      dockerfile: api/Dockerfile.api
    container_name: api
    volumes:
      - ./db.sqlite3:/app/db.sqlite3
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
    ports:
      - "8000:8000"  # Для прямого доступа при отладке (опционально)
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/users/"]
      interval: 10s
      timeout: 5s
      retries: 5

  admin:
    build:
      context: .
      dockerfile: admin/Dockerfile.admin
    container_name: admin
    volumes:
      - ./db.sqlite3:/app/db.sqlite3
      - ./logs:/app/logs
      - ./.env:/app/.env
      - ./admin/templates:/app/templates  # Указываем точный путь к шаблонам
      - ./admin/static:/app/static  # Указываем точный путь к статике
    environment:
      - PYTHONPATH=/app
      - FLASK_ENV=production
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/crewassrun/"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      api:
        condition: service_healthy
      admin:
        condition: service_healthy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

volumes:
  db_data:
  logs: